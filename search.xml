<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>c环境配置</title>
    <url>/2021/12/08/c%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="vscode下编写c程序"><a href="#vscode下编写c程序" class="headerlink" title="vscode下编写c程序"></a><center>vscode下编写c程序</center></h1><h3 id="下载gcc编译器"><a href="#下载gcc编译器" class="headerlink" title="下载gcc编译器"></a>下载gcc编译器</h3><p>使用的是直接解压使用版本的，放在u盘里面了。添加bin目录到path环境变量下（用户变量下即可）</p>
<p>在cmd里面输入gcc -v能看到版本号就表示安装成功了</p>
<h3 id="安装扩展插件"><a href="#安装扩展插件" class="headerlink" title="安装扩展插件"></a>安装扩展插件</h3><p>在vscode里面装两个插件:c/c++和Code Runner</p>
<h3 id="配置选项"><a href="#配置选项" class="headerlink" title="配置选项"></a>配置选项</h3><p>在文件-首选项-扩展里将“Run Code Configuration”中的“Run In Terminal”、”Save File Before Run”前面的复选框选中</p>
<h3 id="运行调试的设置"><a href="#运行调试的设置" class="headerlink" title="运行调试的设置"></a>运行调试的设置</h3><p>首先，在”Terminal“菜单下点击”Configure Tasks…”子菜单。</p>
<p>在随后出现的弹出框中选择“C/C++:gcc.exe生成活动文件”</p>
<p><strong>提示</strong>：没有这个选项框关闭vscode后重启</p>
<p>随后，在“CEXAMPLES”文件夹中会自动生成一个“.vscode”的子文件夹，在这个子文件夹下自动创建一个”tasks.json“的文件。不用做任何改动。</p>
<p>最后，回到“hello.c”文件，单击鼠标右键选择“Run Code”即可运行代码。</p>
<p>运行结果会在下面出现的“Terminal”中显示</p>
<p>如果想要调试代码的话呢？点击“Run”菜单下的“Start Debugging”子菜单</p>
<p>在随后出现的弹出框中选择“C++(GDB/LLDB)”，再选择”gcc.exe“。</p>
<p><strong>提示</strong>：shift f5关闭调试功能</p>
<p>至此，c环境的安装就结束了，终于摆脱上古c环境vc6.0这种了！</p>
]]></content>
      <tags>
        <tag>-环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>My-first-blog</title>
    <url>/2021/11/28/My-first-blog/</url>
    <content><![CDATA[<h1 id="小徐的第一篇博客！"><a href="#小徐的第一篇博客！" class="headerlink" title="小徐的第一篇博客！"></a><center>小徐的第一篇博客！</center></h1><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gwvxiq7p9nj31ww2pg431.jpg" alt="机器猫"></p>
<h3 id="links-链接-视频链接"><a href="#links-链接-视频链接" class="headerlink" title="links:链接 视频链接"></a><span id="more"></span>links:链接 <a href="https://www.bilibili.com/video/BV16W411t7mq?p=16">视频链接</a></h3><p>&nbsp;    动态背景canvas</p>
<h3 id="avatar-头像设置圆形可旋转"><a href="#avatar-头像设置圆形可旋转" class="headerlink" title="avatar:头像设置圆形可旋转"></a>avatar:头像设置圆形可旋转</h3><h3 id="social-启用侧边栏社交"><a href="#social-启用侧边栏社交" class="headerlink" title="social:启用侧边栏社交"></a>social:启用侧边栏社交</h3><h3 id="reward：开启打赏功能"><a href="#reward：开启打赏功能" class="headerlink" title="reward：开启打赏功能"></a>reward：开启打赏功能</h3><h3 id="wechat-subscriber-开启微信公众号订阅"><a href="#wechat-subscriber-开启微信公众号订阅" class="headerlink" title="wechat_subscriber: 开启微信公众号订阅"></a>wechat_subscriber: 开启微信公众号订阅</h3><h3 id="使用-lt-–-–-gt-不展示全文"><a href="#使用-lt-–-–-gt-不展示全文" class="headerlink" title="使用&lt;!– –&gt;:不展示全文"></a>使用&lt;!– –&gt;:不展示全文</h3><h3 id="valine开启评论功能：-leancloud认证d20153185-163-com-leancloud"><a href="#valine开启评论功能：-leancloud认证d20153185-163-com-leancloud" class="headerlink" title="valine开启评论功能： leancloud认证d20153185@163.com leancloud"></a>valine开启评论功能： leancloud认证d20153185@163.com <a href="https://console.leancloud.cn/apps/ITJC4UqpXPsM1zFhTo31z0I6-gzGzoHsz/settings/keys">leancloud</a></h3><h3 id="local-search-本地搜索"><a href="#local-search-本地搜索" class="headerlink" title="local_search:本地搜索"></a>local_search:本地搜索</h3><h3 id="pace加载效果"><a href="#pace加载效果" class="headerlink" title="pace加载效果"></a>pace加载效果</h3><h3 id="powered-强力驱动隐藏"><a href="#powered-强力驱动隐藏" class="headerlink" title="powered:强力驱动隐藏"></a>powered:强力驱动隐藏</h3><h3 id="主题配置文件里busuanzi开启阅读数统计"><a href="#主题配置文件里busuanzi开启阅读数统计" class="headerlink" title="主题配置文件里busuanzi开启阅读数统计"></a>主题配置文件里busuanzi开启阅读数统计</h3><h3 id="在hexo配置文件中34行后有一个post-asset-folder-false-true就是hexo-n-一个md文件时也建立一个相应的文件夹"><a href="#在hexo配置文件中34行后有一个post-asset-folder-false-true就是hexo-n-一个md文件时也建立一个相应的文件夹" class="headerlink" title="在hexo配置文件中34行后有一个post_asset_folder: false#true就是hexo n 一个md文件时也建立一个相应的文件夹"></a>在hexo配置文件中34行后有一个post_asset_folder: false#true就是hexo n 一个md文件时也建立一个相应的文件夹</h3><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gxeiwgxr8aj30gn08241r.jpg" alt="image.png"></p>
<h3 id="需要改进的地方："><a href="#需要改进的地方：" class="headerlink" title="需要改进的地方："></a>需要改进的地方：</h3><p>addthis的分享功能：<a href="https://www.addthis.com/dashboard#profile-options/ra-61a434230ffe63e1/general-settings%E4%BB%A5%E5%8F%8A">https://www.addthis.com/dashboard#profile-options/ra-61a434230ffe63e1/general-settings以及</a> jiathis的分享功能不起作用</p>
<p>可以增加点击爆炸效果</p>
<p>升级博客右下角动漫人物</p>
<p>字数统计阅读时长<a href="https://blog.csdn.net/qq_44082148/article/details/105701427">参考</a><br>&amp;nbsp; 不断行空格 &amp;ensp; 英文空格 &amp;emsp;中文空格<br>进阶博客：<a href="http://blog.itchenliang.club/posts/22350780-f32d-11ea-bb4a-d3e1cbe3d59d/#hexo-uuid">http://blog.itchenliang.club/posts/22350780-f32d-11ea-bb4a-d3e1cbe3d59d/#hexo-uuid</a></p>
<p>增加分享功能：参考如下链接</p>
<p><a href="https://github.com/theme-next/hexo-next-share">https://github.com/theme-next/hexo-next-share</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>小徐</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>linux命令学习</title>
    <url>/2021/12/15/linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>查看linux版本命令: uname -a</p>
<p>DHCP（Dynamic Host Configuration Protocal）:动态主机配置协议。是一个简化主机IP地址分配的TCP/IP协议。保证ip地址不重复分配，也能及时回收ip地址以提高IP地址的利用率。采用DHCP的方法配置计算机IP地址的方案称为动态IP地址。DHCP采用的是客户/服务器模式（Client/Server）。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>p5000环境安装</title>
    <url>/2021/12/15/p5000%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="配置深度学习p5000服务器"><a href="#配置深度学习p5000服务器" class="headerlink" title="配置深度学习p5000服务器"></a><center>配置深度学习p5000服务器</center></h1><h3 id="1、安装Ubuntu20-04桌面版：https-baijiahao-baidu-com-s-id-1665555157367951576-amp-wfr-spider-amp-for-pc"><a href="#1、安装Ubuntu20-04桌面版：https-baijiahao-baidu-com-s-id-1665555157367951576-amp-wfr-spider-amp-for-pc" class="headerlink" title="1、安装Ubuntu20.04桌面版：https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc"></a>1、安装Ubuntu20.04桌面版：<a href="https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc</a></h3><h3 id="2、终端输入python3，发现系统自带了python3-8-10"><a href="#2、终端输入python3，发现系统自带了python3-8-10" class="headerlink" title="2、终端输入python3，发现系统自带了python3.8.10"></a>2、终端输入python3，发现系统自带了python3.8.10</h3><h3 id="3、配置清华园-测试无效，这里提供思路可以借鉴"><a href="#3、配置清华园-测试无效，这里提供思路可以借鉴" class="headerlink" title="3、配置清华园(测试无效，这里提供思路可以借鉴)"></a>3、配置清华园(测试无效，这里提供思路可以借鉴)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#备份文件</span><br><span class="line">sudo cp /etc/apt/sources.list /home/sources.list.bk</span><br><span class="line">#删除</span><br><span class="line">sudo rm -rf /etc/apt/sources.list</span><br><span class="line">#写入</span><br><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<span id="more"></span>写入如下内容：

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>保存退出，最后别忘了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h3 id="4、p5000是Nvidia-Quadro-系列，下载对应系统下run文件（亲测没用）"><a href="#4、p5000是Nvidia-Quadro-系列，下载对应系统下run文件（亲测没用）" class="headerlink" title="4、p5000是Nvidia Quadro 系列，下载对应系统下run文件（亲测没用）"></a>4、p5000是Nvidia Quadro 系列，下载对应系统下run文件（亲测没用）</h3><p>禁用nouveau，这是系统自带的驱动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在文本最后添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">option nouveau modeset=0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>命令窗口会提示warn，无视之。</p>
<p>保存退出，执行以下命令生效：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure>

<p>重启电脑后输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure>

<p>没有任何输出说明禁用成功。</p>
<p>在驱动文件所在的文件夹打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo bash NVIDIA-Linux-x86_64-450.66.run</span><br></pre></td></tr></table></figure>

<p>安装出错</p>
<p>将镜像改回默认</p>
<p><strong>update后upgrate必须要做！</strong></p>
<p>通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ubuntu-drivers devicces</span><br></pre></td></tr></table></figure>

<p>Ubuntu自己检测nVidia的显卡可选驱动，并用recommend标出推荐，p5000是470</p>
<p>与之前查询一致</p>
<p>之间通过命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure>

<p>等待Ubuntu自己安装驱动，并把最新版cuda 一并安装好</p>
<h3 id="5、安装anaconda"><a href="#5、安装anaconda" class="headerlink" title="5、安装anaconda"></a>5、安装anaconda</h3><p><a href="http://www.anaconda.com/products/individual%E4%B8%8B%E8%BD%BDlinux">www.anaconda.com/products/individual下载linux</a> python3.9版本</p>
<p>下好后cd到文件下载目录，用bash安装</p>
<p>安装好后修改环境变量（没装vim?我用的sudo nano亲测没问题）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/administrator/anaconda3/bin:$PATH&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>最后检查一下是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda -V</span><br></pre></td></tr></table></figure>

<p>结果conda4.10.3,完成</p>
<p>输入python3发现是anaconda里的python版本</p>
<p>介绍一下conda里常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建虚拟环境</span><br><span class="line">conda create -n your_env_name python=X.X（3.6、3.7等）</span><br><span class="line"> </span><br><span class="line">#激活虚拟环境</span><br><span class="line">source activate your_env_name(虚拟环境名称)</span><br><span class="line"> </span><br><span class="line">#退出虚拟环境</span><br><span class="line">source deactivate your_env_name(虚拟环境名称)</span><br><span class="line"> </span><br><span class="line">#删除虚拟环境</span><br><span class="line">conda remove -n your_env_name(虚拟环境名称) --all</span><br><span class="line"> </span><br><span class="line">#查看安装了哪些包</span><br><span class="line">conda list</span><br><span class="line"> </span><br><span class="line">#安装包</span><br><span class="line">conda install package_name(包名)</span><br><span class="line">conda install scrapy==1.3 # 安装指定版本的包</span><br><span class="line">conda install -n 环境名 包名 # 在conda指定的某个环境中安装包</span><br><span class="line"> </span><br><span class="line">#查看当前存在哪些虚拟环境</span><br><span class="line">conda env list </span><br><span class="line">#或 </span><br><span class="line">conda info -e</span><br><span class="line">#或</span><br><span class="line">conda info --envs</span><br><span class="line"> </span><br><span class="line">#检查更新当前conda</span><br><span class="line">conda update conda</span><br><span class="line"> </span><br><span class="line">#更新anaconda</span><br><span class="line">conda update anaconda</span><br><span class="line"> </span><br><span class="line">#更新所有库</span><br><span class="line">conda update --all</span><br><span class="line"> </span><br><span class="line">#更新python</span><br><span class="line">conda update python</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6、ifconfig无显示"><a href="#6、ifconfig无显示" class="headerlink" title="6、ifconfig无显示"></a>6、ifconfig无显示</h3><p>执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt net-tools</span><br><span class="line">#装好后在执行ifconfig得到ip为172.21.32.106</span><br></pre></td></tr></table></figure>

<p>使用putty连接服务器报错connection refused</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service ssh status</span><br></pre></td></tr></table></figure>

<p>提示ssh.service could not found</p>
<p>安装ssh服务参考：<a href="https://www.cnblogs.com/livelab/p/13033175.html">https://www.cnblogs.com/livelab/p/13033175.html</a></p>
<p>默认情况下，首次安装Ubuntu时，不允许通过SSH进行远程访问。在Ubuntu上启用SSH非常简单。</p>
<p>以root 用户或具有sudo特权的用户执行以下步骤，以在Ubuntu系统上安装并启用SSH：</p>
<p>使用打开终端<code>Ctrl+Alt+T</code>并安装<code>openssh-server</code>软件包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure>

<p>出现提示时，输入密码，然后按Enter继续安装。</p>
<p>安装完成后，SSH服务将自动启动。您可以通过键入以下命令来验证SSH是否正在运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure>

<p>输出应告诉您该服务正在运行，并已启用以在系统引导时启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">● ssh.service - OpenBSD Secure Shell server</span><br><span class="line"> Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)</span><br><span class="line"> Active: active (running) since Mon 2020-06-01 12:34:00 CEST; 9h ago</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>按<code>q</code>返回到命令行提示符。</p>
<p>Ubuntu随附了一个名为UFW的防火墙配置工具。如果在系统上启用了防火墙，请确保打开SSH端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure>

<p>现在，可以从任何远程计算机通过SSH连接到Ubuntu系统。Linux和macOS系统默认安装了SSH客户端。要从Windows计算机连接，使用SSH客户端（例如PuTTY）。亲测成功！</p>
<h3 id="7、使用conda来安装深度学习框架pytorch-避免自己配置cudann等"><a href="#7、使用conda来安装深度学习框架pytorch-避免自己配置cudann等" class="headerlink" title="7、使用conda来安装深度学习框架pytorch,避免自己配置cudann等"></a>7、使用conda来安装深度学习框架pytorch,避免自己配置cudann等</h3><p>去pytorch官网去找下载命令（在自己环境下）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gxfw1g9nelj30lz0aeacz.jpg" alt="image.png"></p>
<p>装完基本完事</p>
<h3 id="8、https-www-realvnc-com-en-connect-download-viewer-下载客户端"><a href="#8、https-www-realvnc-com-en-connect-download-viewer-下载客户端" class="headerlink" title="8、https://www.realvnc.com/en/connect/download/viewer/下载客户端"></a>8、<a href="https://www.realvnc.com/en/connect/download/viewer/%E4%B8%8B%E8%BD%BD%E5%AE%A2%E6%88%B7%E7%AB%AF">https://www.realvnc.com/en/connect/download/viewer/下载客户端</a></h3><p>服务器端打开设置-共享-屏幕共享</p>
<p>客户端安装vnc客户端即可</p>
]]></content>
  </entry>
  <entry>
    <title>为博客代码块增加复制按钮！</title>
    <url>/2021/11/29/%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE/</url>
    <content><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gww8nb5784j30uc046gm0.jpg"></p>
<p>之前博客文章出现代码块内容不可复制，于是就给它进行完善一下</p>
<span id="more"></span>

<p>搜寻资料意外发现next主题自带了复制按钮的功能，搜索关键字copy找到对应的位置如下</p>
<p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gww8lvivgbj30c7040t9q.jpg"></p>
<p>enable是复制按钮的开关，第二个字段不开会不知道复制成功不成功的效果。（开启以后的点击按钮会显示一个对号）</p>
<p>style这三种风格，随便选取一种就好了，我选择了mac,效果就是封面图，至此已经完成！</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>使用树莓派3B+搭建局域网文件服务器</title>
    <url>/2021/12/15/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE3B+%E6%90%AD%E5%BB%BA%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="使用树莓派3B-搭建局域网文件服务器！"><a href="#使用树莓派3B-搭建局域网文件服务器！" class="headerlink" title="使用树莓派3B+搭建局域网文件服务器！"></a><center>使用树莓派3B+搭建局域网文件服务器！</center></h1><p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeiaikemhj30zn0pc7bw.jpg" alt="屏幕截图 2021-12-15 122129.png"></p>
<span id="more"></span>

<p>步骤：</p>
<p>为树莓派3B+安装raspberry pi操作系统</p>
<p>安装samba并配置文件</p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxej8jvvg2j32700zjgvs.jpg" alt="微信图片_20211215121933.jpg"></p>
<p>添加samba组用户</p>
<p>新建目录chmod赋予权限777并挂载移动硬盘到此目录下：第一次插移动硬盘自动挂载，挂载失败用umount命令解除挂载重新再挂</p>
<p>映射硬盘到自己本地</p>
<p>手机端部署：安装es文件浏览器，效果如下</p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeilurp8pj30sq1nxmza.jpg" alt="微信图片_20211214222834.jpg"></p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeimkegfhj30u01uowj1.jpg" alt="微信图片_20211214222953.jpg"></p>
<p>部分电脑由于组策略无法访问</p>
<p>pi文件夹记得隐藏</p>
<p>ip地址动态分配导致的问题在etc/dhcpcd.conf下更改配置文件，41到44行取消注释更改静态路由，广播地址即可解决</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>树莓派负载小，配置完以后显示器也不需要连接，就可以实现各个操作系统以及平台的文件共享，效果还是不错的！</p>
<p>文件的传输速度受到树莓派3B+没有usb3.0接口的影响，以后搭建家里用的nas可以考虑升级固态和新接口平台！</p>
<p>至于改进的地方：风扇并不是温控的，有噪声，可以考虑改成温控的。3代树莓派通电就开机，可以尝试接入开关电源，或者加入按键按钮改写代码，网上有人已经实现了，用按钮开关连接两个引脚。</p>
<h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><h2 id="https-blog-csdn-net-zlllg-article-details-88547648"><a href="#https-blog-csdn-net-zlllg-article-details-88547648" class="headerlink" title="https://blog.csdn.net/zlllg/article/details/88547648"></a><a href="https://blog.csdn.net/zlllg/article/details/88547648">https://blog.csdn.net/zlllg/article/details/88547648</a></h2><p>​           </p>
]]></content>
      <tags>
        <tag>树莓派</tag>
        <tag>samba局域网文件服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>文章加密</title>
    <url>/2021/11/29/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h3 id="一-编辑-themes-next-layout-partials-head-swig在如下位置添加代码"><a href="#一-编辑-themes-next-layout-partials-head-swig在如下位置添加代码" class="headerlink" title="一.编辑/themes/next/layout/_partials/head.swig在如下位置添加代码"></a>一.编辑<code>/themes/next/layout/_partials/head.swig</code>在如下位置添加代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">            if (prompt(&#x27;请输入密码&#x27;) !== &#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">                alert(&#x27;密码错误&#x27;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>之后，在你想要加密的文章的头文件里添加上<code>password: xxxxxx </code>即可。</p>
<h3 id="二-也是我自己采用的加密方法：装插件"><a href="#二-也是我自己采用的加密方法：装插件" class="headerlink" title="二.也是我自己采用的加密方法：装插件"></a>二.也是我自己采用的加密方法：装插件</h3><h4 id="1-npm-install-–save-hexo-blog-encrypt"><a href="#1-npm-install-–save-hexo-blog-encrypt" class="headerlink" title="1.npm install –save hexo-blog-encrypt"></a>1.npm install –save hexo-blog-encrypt</h4><h4 id="2-要为一篇文章添加密码查看功能，只需要在文章信息头部添加-password-字段即可："><a href="#2-要为一篇文章添加密码查看功能，只需要在文章信息头部添加-password-字段即可：" class="headerlink" title="2.要为一篇文章添加密码查看功能，只需要在文章信息头部添加 password 字段即可："></a>2.要为一篇文章添加密码查看功能，只需要在文章信息头部添加 <code>password</code> 字段即可：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2021-04-13 21:18:02</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="3-在Hexo主配置文件-config-yml-中添加如下配置："><a href="#3-在Hexo主配置文件-config-yml-中添加如下配置：" class="headerlink" title="3.在Hexo主配置文件 _config.yml 中添加如下配置："></a>3.在Hexo主配置文件 <code>_config.yml</code> 中添加如下配置：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Security</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  silent: true</span><br><span class="line">  abstract: 这是一篇加密文章，需要密码才能继续阅读。</span><br><span class="line">  message: 当前文章暂不对外可见，请输入密码后查看！</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: private, password: hello&#125;</span><br><span class="line">  wrong_pass_message: 抱歉，您输入的密码错误，请检查后重新输入。</span><br><span class="line">  wrong_hash_message: 抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。</span><br></pre></td></tr></table></figure>

<p>就可以按照标签类加密</p>
<p>进阶教程：<a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/</a></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>点击烟花爆炸效果</title>
    <url>/2021/11/29/%E7%82%B9%E5%87%BB%E7%83%9F%E8%8A%B1%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h2 id="动手做烟花特效！"><a href="#动手做烟花特效！" class="headerlink" title="动手做烟花特效！"></a><center>动手做烟花特效！</center></h2><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gww78e8cl5j30hv0fjgrj.jpg"></p>
<span id="more"></span>

<h4 id="1-themes-你选择的主题-source-js-下新建文件-firework-js-，添加代码："><a href="#1-themes-你选择的主题-source-js-下新建文件-firework-js-，添加代码：" class="headerlink" title="1. themes/你选择的主题/source/js 下新建文件 firework.js ，添加代码："></a>1. themes/你选择的主题/source/js 下新建文件 firework.js ，添加代码：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;use strict&quot;;</span><br><span class="line">function updateCoords(e) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[0].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line">function setParticuleDirection(e) &#123;</span><br><span class="line">  var t = (anime.random(0, 360) * Math.PI) / 180,</span><br><span class="line">    a = anime.random(50, 180),</span><br><span class="line">    n = [-1, 1][anime.random(0, 1)] * a;</span><br><span class="line">  return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line">function createParticule(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(0, colors.length - 1)]),</span><br><span class="line">    (a.radius = anime.random(16, 32)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function createCircle(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = &quot;#F00&quot;),</span><br><span class="line">    (a.radius = 0.1),</span><br><span class="line">    (a.alpha = 0.5),</span><br><span class="line">    (a.lineWidth = 6),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = 1);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function renderParticule(e) &#123;</span><br><span class="line">  for (var t = 0; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function animateParticules(e, t) &#123;</span><br><span class="line">  for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: function (e) &#123;</span><br><span class="line">        return e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: function (e) &#123;</span><br><span class="line">        return e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: 0.1,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(80, 160),</span><br><span class="line">      lineWidth: 0,</span><br><span class="line">      alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: 0,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function debounce(e, t) &#123;</span><br><span class="line">  var a;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var n = this,</span><br><span class="line">      i = arguments;</span><br><span class="line">    clearTimeout(a),</span><br><span class="line">      (a = setTimeout(function () &#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var canvasEl = document.querySelector(&quot;.fireworks&quot;);</span><br><span class="line">if (canvasEl) &#123;</span><br><span class="line">  var ctx = canvasEl.getContext(&quot;2d&quot;),</span><br><span class="line">    numberOfParticules = 30,</span><br><span class="line">    pointerX = 0,</span><br><span class="line">    pointerY = 0,</span><br><span class="line">    tap = &quot;mousedown&quot;,</span><br><span class="line">    colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;],</span><br><span class="line">    setCanvasSize = debounce(function () &#123;</span><br><span class="line">      (canvasEl.width = 2 * window.innerWidth),</span><br><span class="line">        (canvasEl.height = 2 * window.innerHeight),</span><br><span class="line">        (canvasEl.style.width = window.innerWidth + &quot;px&quot;),</span><br><span class="line">        (canvasEl.style.height = window.innerHeight + &quot;px&quot;),</span><br><span class="line">        canvasEl.getContext(&quot;2d&quot;).scale(2, 2);</span><br><span class="line">    &#125;, 500),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: 1 / 0,</span><br><span class="line">      update: function () &#123;</span><br><span class="line">        ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  document.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    function (e) &#123;</span><br><span class="line">      &quot;sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;A&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        &quot;IMG&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !1</span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);</span><br><span class="line">&#125;</span><br><span class="line">(&quot;use strict&quot;);</span><br><span class="line">function updateCoords(e) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[0].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line">function setParticuleDirection(e) &#123;</span><br><span class="line">  var t = (anime.random(0, 360) * Math.PI) / 180,</span><br><span class="line">    a = anime.random(50, 180),</span><br><span class="line">    n = [-1, 1][anime.random(0, 1)] * a;</span><br><span class="line">  return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line">function createParticule(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(0, colors.length - 1)]),</span><br><span class="line">    (a.radius = anime.random(16, 32)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function createCircle(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = &quot;#F00&quot;),</span><br><span class="line">    (a.radius = 0.1),</span><br><span class="line">    (a.alpha = 0.5),</span><br><span class="line">    (a.lineWidth = 6),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = 1);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function renderParticule(e) &#123;</span><br><span class="line">  for (var t = 0; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function animateParticules(e, t) &#123;</span><br><span class="line">  for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: function (e) &#123;</span><br><span class="line">        return e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: function (e) &#123;</span><br><span class="line">        return e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: 0.1,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(80, 160),</span><br><span class="line">      lineWidth: 0,</span><br><span class="line">      alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: 0,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function debounce(e, t) &#123;</span><br><span class="line">  var a;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var n = this,</span><br><span class="line">      i = arguments;</span><br><span class="line">    clearTimeout(a),</span><br><span class="line">      (a = setTimeout(function () &#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var canvasEl = document.querySelector(&quot;.fireworks&quot;);</span><br><span class="line">if (canvasEl) &#123;</span><br><span class="line">  var ctx = canvasEl.getContext(&quot;2d&quot;),</span><br><span class="line">    numberOfParticules = 30,</span><br><span class="line">    pointerX = 0,</span><br><span class="line">    pointerY = 0,</span><br><span class="line">    tap = &quot;mousedown&quot;,</span><br><span class="line">    colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;],</span><br><span class="line">    setCanvasSize = debounce(function () &#123;</span><br><span class="line">      (canvasEl.width = 2 * window.innerWidth),</span><br><span class="line">        (canvasEl.height = 2 * window.innerHeight),</span><br><span class="line">        (canvasEl.style.width = window.innerWidth + &quot;px&quot;),</span><br><span class="line">        (canvasEl.style.height = window.innerHeight + &quot;px&quot;),</span><br><span class="line">        canvasEl.getContext(&quot;2d&quot;).scale(2, 2);</span><br><span class="line">    &#125;, 500),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: 1 / 0,</span><br><span class="line">      update: function () &#123;</span><br><span class="line">        ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  document.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    function (e) &#123;</span><br><span class="line">      &quot;sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;A&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        &quot;IMG&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !1</span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-在-themes-你选择的主题-layout-layout-swig-下添加："><a href="#2-在-themes-你选择的主题-layout-layout-swig-下添加：" class="headerlink" title="2.在 themes/你选择的主题/layout/layout.swig 下添加："></a>2.在 themes/你选择的主题/layout/layout.swig 下添加：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/firework.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>烟花</tag>
      </tags>
  </entry>
  <entry>
    <title>论文</title>
    <url>/2021/12/06/%E8%AE%BA%E6%96%87/</url>
    <content><![CDATA[<h3 id="a-fast-and-accurate-one-stage-approach-to-visual-grounding"><a href="#a-fast-and-accurate-one-stage-approach-to-visual-grounding" class="headerlink" title="a fast and accurate one-stage approach to visual grounding"></a><center>a fast and accurate one-stage approach to visual grounding</center></h3><p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4a7qtd3dj34kg220kjm.jpg"></p>
<span id="more"></span>

<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4a8wxvrij34kg220hdu.jpg"></p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4aa0u0ysj34kg220kjm.jpg"></p>
<h3 id="头脑风暴："><a href="#头脑风暴：" class="headerlink" title="头脑风暴："></a>头脑风暴：</h3><p>1、加入色彩模块，是否可以增加识别的准确度？</p>
<p>2、含糊不清楚的识别，是否可以通过设置阈值将多目标一起框选？</p>
<p><a href="grounding.pptx">点击下载</a> 汇报ppt</p>
]]></content>
      <tags>
        <tag>论文学习</tag>
      </tags>
  </entry>
  <entry>
    <title>看板娘设置</title>
    <url>/2021/11/29/%E7%9C%8B%E6%9D%BF%E5%A8%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="制作好玩好看的二次元人物到博客！"><a href="#制作好玩好看的二次元人物到博客！" class="headerlink" title="制作好玩好看的二次元人物到博客！"></a><center>制作好玩好看的二次元人物到博客！</center></h1><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gwwc6wltwjj30b808qwhg.jpg"></p>
<span id="more"></span>

<h3 id="1-下载代码。解压到next-source-下"><a href="#1-下载代码。解压到next-source-下" class="headerlink" title="1.下载代码。解压到next\source\下"></a>1.下载<a href="https://github.com/stevenjoezhang/live2d-widget">代码</a>。解压到next\source\下</h3><h3 id="2-修改配置文件：更改live2d-widget下的autoload-js文件"><a href="#2-修改配置文件：更改live2d-widget下的autoload-js文件" class="headerlink" title="2.修改配置文件：更改live2d-widget下的autoload.js文件"></a>2.修改配置文件：更改live2d-widget下的autoload.js文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 注意：live2d_path 参数应使用绝对路径</span><br><span class="line">//const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;;</span><br><span class="line">const live2d_path = &quot;/live2d-widget/&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-修改-themes-next-layout-下的-layout-swing或者-layout-swig文件，在head标签中添加一行代码。"><a href="#3-修改-themes-next-layout-下的-layout-swing或者-layout-swig文件，在head标签中添加一行代码。" class="headerlink" title="3.修改/themes/next/layout/下的_layout.swing或者_layout.swig文件，在head标签中添加一行代码。"></a>3.修改/themes/next/layout/下的_layout.swing或者_layout.swig文件，在head标签中添加一行代码。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-在theme-next-config-yml中-新增如下内容："><a href="#4-在theme-next-config-yml中-新增如下内容：" class="headerlink" title="4.在theme/next/_config.yml中,新增如下内容："></a>4.在theme/next/_config.yml中,新增如下内容：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h3 id="5-至此配置基本完成"><a href="#5-至此配置基本完成" class="headerlink" title="5.至此配置基本完成"></a>5.至此配置基本完成</h3><p>实际使用发现手机版展示不了，在theme/next/_config.yml中,加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mobile:</span><br><span class="line">  show: true ##移动端是否显示</span><br></pre></td></tr></table></figure>

<p>也没有，不过这个不是很重要的功能，暂时就这样，以后有时间再弄</p>
<p>贴个网址吧：<a href="https://www.i4k.xyz/article/cungudafa/104282643">https://www.i4k.xyz/article/cungudafa/104282643</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>看板娘</tag>
      </tags>
  </entry>
</search>
