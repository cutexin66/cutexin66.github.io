<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My-first-blog</title>
    <url>/2021/11/28/My-first-blog/</url>
    <content><![CDATA[<h1 id="小徐的第一篇博客！"><a href="#小徐的第一篇博客！" class="headerlink" title="小徐的第一篇博客！"></a><center>小徐的第一篇博客！</center></h1><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gwvxiq7p9nj31ww2pg431.jpg" alt="机器猫"></p>
<h3 id="links-链接-视频链接"><a href="#links-链接-视频链接" class="headerlink" title="links:链接 视频链接"></a><span id="more"></span>links:链接 <a href="https://www.bilibili.com/video/BV16W411t7mq?p=16">视频链接</a></h3><p>&nbsp;    动态背景canvas</p>
<h3 id="avatar-头像设置圆形可旋转"><a href="#avatar-头像设置圆形可旋转" class="headerlink" title="avatar:头像设置圆形可旋转"></a>avatar:头像设置圆形可旋转</h3><h3 id="social-启用侧边栏社交"><a href="#social-启用侧边栏社交" class="headerlink" title="social:启用侧边栏社交"></a>social:启用侧边栏社交</h3><h3 id="reward：开启打赏功能"><a href="#reward：开启打赏功能" class="headerlink" title="reward：开启打赏功能"></a>reward：开启打赏功能</h3><h3 id="wechat-subscriber-开启微信公众号订阅"><a href="#wechat-subscriber-开启微信公众号订阅" class="headerlink" title="wechat_subscriber: 开启微信公众号订阅"></a>wechat_subscriber: 开启微信公众号订阅</h3><h3 id="使用-lt-–-–-gt-不展示全文"><a href="#使用-lt-–-–-gt-不展示全文" class="headerlink" title="使用&lt;!– –&gt;:不展示全文"></a>使用&lt;!– –&gt;:不展示全文</h3><h3 id="valine开启评论功能：-leancloud认证d20153185-163-com-leancloud"><a href="#valine开启评论功能：-leancloud认证d20153185-163-com-leancloud" class="headerlink" title="valine开启评论功能： leancloud认证d20153185@163.com leancloud"></a>valine开启评论功能： leancloud认证d20153185@163.com <a href="https://console.leancloud.cn/apps/ITJC4UqpXPsM1zFhTo31z0I6-gzGzoHsz/settings/keys">leancloud</a></h3><h3 id="local-search-本地搜索"><a href="#local-search-本地搜索" class="headerlink" title="local_search:本地搜索"></a>local_search:本地搜索</h3><h3 id="pace加载效果"><a href="#pace加载效果" class="headerlink" title="pace加载效果"></a>pace加载效果</h3><h3 id="powered-强力驱动隐藏"><a href="#powered-强力驱动隐藏" class="headerlink" title="powered:强力驱动隐藏"></a>powered:强力驱动隐藏</h3><h3 id="主题配置文件里busuanzi开启阅读数统计"><a href="#主题配置文件里busuanzi开启阅读数统计" class="headerlink" title="主题配置文件里busuanzi开启阅读数统计"></a>主题配置文件里busuanzi开启阅读数统计</h3><h3 id="在hexo配置文件中34行后有一个post-asset-folder-false-true就是hexo-n-一个md文件时也建立一个相应的文件夹"><a href="#在hexo配置文件中34行后有一个post-asset-folder-false-true就是hexo-n-一个md文件时也建立一个相应的文件夹" class="headerlink" title="在hexo配置文件中34行后有一个post_asset_folder: false#true就是hexo n 一个md文件时也建立一个相应的文件夹"></a>在hexo配置文件中34行后有一个post_asset_folder: false#true就是hexo n 一个md文件时也建立一个相应的文件夹</h3><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gxeiwgxr8aj30gn08241r.jpg" alt="image.png"></p>
<h3 id="需要改进的地方："><a href="#需要改进的地方：" class="headerlink" title="需要改进的地方："></a>需要改进的地方：</h3><p>addthis的分享功能：<a href="https://www.addthis.com/dashboard#profile-options/ra-61a434230ffe63e1/general-settings%E4%BB%A5%E5%8F%8A">https://www.addthis.com/dashboard#profile-options/ra-61a434230ffe63e1/general-settings以及</a> jiathis的分享功能不起作用</p>
<p>可以增加点击爆炸效果</p>
<p>升级博客右下角动漫人物</p>
<p>字数统计阅读时长<a href="https://blog.csdn.net/qq_44082148/article/details/105701427">参考</a><br>&amp;nbsp; 不断行空格 &amp;ensp; 英文空格 &amp;emsp;中文空格<br>进阶博客：<a href="http://blog.itchenliang.club/posts/22350780-f32d-11ea-bb4a-d3e1cbe3d59d/#hexo-uuid">http://blog.itchenliang.club/posts/22350780-f32d-11ea-bb4a-d3e1cbe3d59d/#hexo-uuid</a></p>
<p>增加分享功能：参考如下链接</p>
<p><a href="https://github.com/theme-next/hexo-next-share">https://github.com/theme-next/hexo-next-share</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>小徐</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>c环境配置</title>
    <url>/2021/12/08/c%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="vscode下编写c程序"><a href="#vscode下编写c程序" class="headerlink" title="vscode下编写c程序"></a><center>vscode下编写c程序</center></h1><h3 id="下载gcc编译器"><a href="#下载gcc编译器" class="headerlink" title="下载gcc编译器"></a>下载gcc编译器</h3><p>使用的是直接解压使用版本的，放在u盘里面了。添加bin目录到path环境变量下（用户变量下即可）</p>
<p>在cmd里面输入gcc -v能看到版本号就表示安装成功了</p>
<h3 id="安装扩展插件"><a href="#安装扩展插件" class="headerlink" title="安装扩展插件"></a>安装扩展插件</h3><p>在vscode里面装两个插件:c/c++和Code Runner</p>
<h3 id="配置选项"><a href="#配置选项" class="headerlink" title="配置选项"></a>配置选项</h3><p>在文件-首选项-扩展里将“Run Code Configuration”中的“Run In Terminal”、”Save File Before Run”前面的复选框选中</p>
<h3 id="运行调试的设置"><a href="#运行调试的设置" class="headerlink" title="运行调试的设置"></a>运行调试的设置</h3><p>首先，在”Terminal“菜单下点击”Configure Tasks…”子菜单。</p>
<p>在随后出现的弹出框中选择“C/C++:gcc.exe生成活动文件”</p>
<p><strong>提示</strong>：没有这个选项框关闭vscode后重启</p>
<p>随后，在“CEXAMPLES”文件夹中会自动生成一个“.vscode”的子文件夹，在这个子文件夹下自动创建一个”tasks.json“的文件。不用做任何改动。</p>
<p>最后，回到“hello.c”文件，单击鼠标右键选择“Run Code”即可运行代码。</p>
<p>运行结果会在下面出现的“Terminal”中显示</p>
<p>如果想要调试代码的话呢？点击“Run”菜单下的“Start Debugging”子菜单</p>
<p>在随后出现的弹出框中选择“C++(GDB/LLDB)”，再选择”gcc.exe“。</p>
<p><strong>提示</strong>：shift f5关闭调试功能</p>
<p>至此，c环境的安装就结束了，终于摆脱上古c环境vc6.0这种了！</p>
]]></content>
      <tags>
        <tag>-环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>ios翻墙</title>
    <url>/2021/12/31/ios%E7%BF%BB%E5%A2%99/</url>
    <content><![CDATA[<p><strong>一、无需国外ID，利用TestFlight安装Fair Plus 2（免费）</strong></p>
<p>先在苹果机上点击并安装<a href="https://apps.apple.com/us/app/testflight/id899247664">TestFlight</a>软件，TestFlight下载地址：<a href="https://apps.apple.com/us/app/testflight/id899247664">https</a> ://apps.apple.com/us/app/testflight/id899247664</p>
<p>然后安装<a href="https://testflight.apple.com/join/sdBZzV82">Fair Plus 2</a>，Fair Plus 2 下载地址：<a href="https://testflight.apple.com/join/sdBZzV82%EF%BC%88%E5%BC%80%E5%8F%91%E8%80%85%E6%9A%82%E5%81%9C%E4%BA%86%E6%96%B0%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%EF%BC%8C%E8%BF%87%E6%AE%B5%E6%97%B6%E9%97%B4%E7%9C%8B%E7%9C%8B%E6%83%85%E5%86%B5%E5%86%8D%E6%89%93%E5%BC%80%EF%BC%89">https://testflight.apple.com/join/sdBZzV82（开发者暂停了新用户加入，过段时间看看情况再打开）</a></p>
<p>安装 TestFlight 之后，用 saf 浏览器打开开启 VPN 下载地址，在弹出的页面中点击加入此 Beta 版本的“开始测试”。</p>
<p>注：Fair Plus 2 的前身为 Fair VPN。TestFlight 孔雀三个月，我们会发布新版，请及时更新。下载过 VPN 软件的用户，到时候可以在 TestFlight 软件里面进行 VPN 更新。</p>
<p>软件分两部分，部分是浏览器（可看新闻网站，手指长按屏幕往下可切换网站），另一部分是VPN设置。VPN设置。从上往下点击是VPN按钮、4种添加VPN节点方法。我们以最后一个获取免费VPN为例。</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112310933420.png" alt="image-20211231093328299"></p>
<p>点击之后，会出现3个免费获取节点地址，以第1个为演示。</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112310934891.png" alt="image-20211231093401808"></p>
<p>导入节点启动后，某个节点，第一次使用会弹出是否允许VPN提醒，点击。</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112310934253.png" alt="image-20211231093449158"></p>
<p>如果免费账号不能正常使用，还有半年是账号失效了，可以删除后重新获取。</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112310935047.png" alt="image-20211231093532976"></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>ios翻墙</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1641</title>
    <url>/2021/12/08/leetcode1641/</url>
    <content><![CDATA[<p>题目描述：<br>给你一个整数 n，请返回长度为 n 、仅由元音 (a, e, i, o, u) 组成且按 字典序排列 的字符串数量。<br>字符串 s 按 字典序排列 需要满足：对于所有有效的 i，s[i] 在字母表中的位置总是与 s[i+1] 相同或在 s[i+1] 之前。<br><img src="img/1641.png" alt="示例"></p>
<hr>
<p>#<strong>数学解法</strong>：可以把问题转换成将 n 个小球放到 5 个盒子里，盒子可以为空。</p>
<p>我们可以想象成把 n 个字符分配给五个元音所代表的盒子中。一旦每个盒子中的字符个数定了，那么这个字符串也固定下来了。因为题目要求必须是字典序，所以一定 a 字符在最前；其次是 e 字符；其次是 i 字符；其次是 o 字符；其次是 u 字符。</p>
<p>下面问题的关键就是，n 个小球放到 5 个盒子里，盒子可以为空，一共有多少种方法？</p>
<p>这是经典的中学数学问题。更一般的，我们来探讨，将 n 个小球放到 m 个盒子里，有多少种方法？</p>
<p>首先，我们考虑问题的简单版本，即盒子不能为空的情况。</p>
<p>此时，我们只需要在 n 个小球排成一排，中间放 m - 1 个隔板，放好以后，相当于把 n 个小球分成了 m 份。每一份对应一个盒子里的小球数量。</p>
<p>因为盒子不能为空，所以两个小球之间不可能放多个隔板，左右两端也不可能放隔板。因此，放隔板的位置有 n - 1 个，我们要放 m - 1 个隔板。答案为 C(n - 1, m - 1)。</p>
<p>有了这个结论，再来讨论问题的复杂版本，就简单了，即盒子可以为空的情况。</p>
<p>此时，我们只需要先拿 m 个新的小球，在 m 个盒子里，每个盒子中扔进去一个小球。之后，再分配原来的这 n 个小球，得到的分配结果，肯定 m 个盒子里都不为空。但此时，我们使用了 n + m 个小球。</p>
<p>换句话说，把 n 个小球放到 m 个盒子里，盒子可以为空，等价于：把 n + m 个小球放到 m 个盒子里，盒子不能为空。</p>
<p>大家也可以想成是：我们先把 n + m 个小球放到 m 个盒子里，盒子不能为空，然后再在每个盒子里拿走 1 个小球，总共拿走了 m 个小球，得到的结果，就是把 n 个小球放到 m 个盒子里，盒子可以为空的解。</p>
<p>把 n + m 个小球放到 m 个盒子里，盒子不能为空的分法，带入上面的公式，就是 C(n + m - 1, m - 1)</p>
<p>所以，把 n 个小球放到 m 个盒子里，盒子可以为空，答案为 C(n + m - 1, m - 1)。</p>
<p>总结：</p>
<p>将 n 个小球放到 m 个盒子里，盒子不为空：C(n - 1, m - 1)；</p>
<p>将 n 个小球放到 m 个盒子里，盒子可以空：C(n + m - 1, m - 1)；</p>
<p>对于这个问题，m = 5，盒子可以为空，所以答案是 C(n + 5 - 1, 5 - 1) = C(n + 4, 4)</p>
<hr>
<p>##也可以<strong>动态规划</strong>求解<br><img src="img/1641_1.png"><br>字母表示结尾<br>#还可以从头开始动态规划，但是会重复计算</p>
]]></content>
      <tags>
        <tag>-leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>linux卸载mongodb</title>
    <url>/2022/01/10/linux%E5%8D%B8%E8%BD%BDmongodb/</url>
    <content><![CDATA[<h1 id="在linux如何卸载mongdb-在Ubuntu系统上安装MongoDB及配置和卸载MongoDB的两种方法"><a href="#在linux如何卸载mongdb-在Ubuntu系统上安装MongoDB及配置和卸载MongoDB的两种方法" class="headerlink" title="在linux如何卸载mongdb,在Ubuntu系统上安装MongoDB及配置和卸载MongoDB的两种方法"></a>在linux如何卸载mongdb,在Ubuntu系统上安装MongoDB及配置和卸载MongoDB的两种方法</h1><p>本文介绍在Ubuntu和基于Ubuntu的Linux发行版上安装MongoDB的两种方法，包括配置和卸载MongoDB的方法。第一种是使用Ubuntu的存储库安装MongoDB，简单但不是最新版本的MongoDB。第二种是使用其官方存储库安装MongoDB，稍微复杂，但你得到的是最新版本的MongoDB。第一种安装方法更容易，但如果你计划在官方支持下使用最新版本，我建议使用第二种方法。</p>
<p>方法一、从Ubuntu Repository安装MongoDB</p>
<p>这是在系统上安装MongoDB的简便方法，你只需输入一个简单的命令即可。</p>
<p>1、安装MongoDB</p>
<p>首先，确保你的包是最新的，打开终端并输入：</p>
<p>sudo apt update &amp;&amp; sudo apt upgrade -y</p>
<p>继续安装MongoDB：</p>
<p>sudo apt install mongodb</p>
<p>MongoDB现已安装在你的计算机上了。</p>
<p>MongoDB服务应该在安装时自动启动，但要检查状态类型：</p>
<p>sudo systemctl status mongodb</p>
<p><img src="http://pic.cutexin.cn/images/2022/01/10/202201102136456.png" alt="image-20220110213650344"></p>
<p>你可以看到该服务处于活动状态。</p>
<p>2、运行MongoDB</p>
<p>MongoDB目前是一个systemd服务，所以我们将使用systemctl来检查和修改它的状态，使用以下命令：</p>
<p>sudo systemctl status mongodb</p>
<p>sudo systemctl stop mongodb</p>
<p>sudo systemctl start mongodb</p>
<p>sudo systemctl restart mongodb</p>
<p>如果MongoDB在系统启动时自动启动，你也可以更改(默认值：启用)：</p>
<p>sudo systemctl disable mongodb</p>
<p>sudo systemctl enable mongodb</p>
<p>要开始使用(创建和编辑)数据库，请输入：</p>
<p>mongo</p>
<p>这将启动mongo shell。</p>
<p>注意：根据你计划使用MongoDB的方式，你可能需要调整防火墙。</p>
<p>3、卸载MongoDB</p>
<p>如果你从Ubuntu Repository安装MongoDB并想要卸载它(可能使用官方支持的方式安装)，请输入：</p>
<p>sudo systemctl stop mongodb</p>
<p>sudo apt purge mongodb</p>
<p>sudo apt autoremove</p>
<p>确保备份你可能想要保留的任何集合或文档，因为它们将被清除。</p>
<p>方法二、在Ubuntu上安装MongoDB Community Edition</p>
<p>这是使用包管理器安装MongoDB的推荐方法。</p>
<p>1、安装MongoDB</p>
<p>由MongoDB Inc维护的包称为mongodb-org，而不是mongodb(这是Ubuntu存储库中包的名称)，在应用此步骤之前，请确保系统上未安装mongodb。</p>
<p>首先，我们必须导入公钥：</p>
<p>sudo apt-key adv –keyserver hkp://keyserver.ubuntu.com:80 –recv 9DA31620334BD75D9DCB49F368818C72E52529D4</p>
<p>现在，你需要在源列表中添加一个新的存储库，以便你可以安装MongoDB Community Edition并获得自动更新：</p>
<p>echo “deb [ arch=amd64 ] <a href="https://repo.mongodb.org/apt/ubuntu">https://repo.mongodb.org/apt/ubuntu</a> $(lsb_release -cs)/mongodb-org/4.0 multiverse” | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list</p>
<p>为了能够安装mongodb-org，我们必须更新我们的包数据库，以便你的系统知道可用的新包：</p>
<p>sudo apt update</p>
<p>现在可以安装最新的稳定版MongoDB：</p>
<p>sudo apt install -y mongodb-org</p>
<p>或特定版本(等号后更改版本号)：</p>
<p>sudo apt install -y mongodb-org=4.0.6 mongodb-org-server=4.0.6 mongodb-org-shell=4.0.6 mongodb-org-mongos=4.0.6 mongodb-org-tools=4.0.6</p>
<p>如果你选择安装特定版本，请确保在任何位置更改版本号，如果你只在mongodb-org=4.0.6部分更改它，将安装最新版本。</p>
<p>默认情况下，使用包管理器(apt-get)进行更新时，MongoDB将更新为最新的更新版本，要阻止这种情况发生(并冻结到已安装的版本)，请使用：</p>
<p>echo “mongodb-org hold” | sudo dpkg –set-selections</p>
<p>echo “mongodb-org-server hold” | sudo dpkg –set-selections</p>
<p>echo “mongodb-org-shell hold” | sudo dpkg –set-selections</p>
<p>echo “mongodb-org-mongos hold” | sudo dpkg –set-selections</p>
<p>echo “mongodb-org-tools hold” | sudo dpkg –set-selections</p>
<p>现在已经成功安装了MongoDB。</p>
<p>2、配置MongoDB</p>
<p>默认情况下，包管理器将创建/var/lib/mongodb和/var/log/mongodb，MongoDB将使用mongodb用户帐户运行。</p>
<p>我不会更改这些默认设置。</p>
<p>启动/重新启动mongodb服务实例时，将应用/etc/mongod.conf中的设置。</p>
<p>3、运行MongoDB</p>
<p>要启动mongodb daemonmongod，请输入：</p>
<p>sudo service mongod start</p>
<p>现在应该验证mongod进程是否已成功启动，此信息(默认情况下)存储在/var/log/mongodb/mongod.log中，我们来看看那个文件的内容：</p>
<p>sudo cat /var/log/mongodb/mongod.log</p>
<p><img src="http://pic.cutexin.cn/images/2022/01/10/202201102137696.png" alt="image-20220110213751552"></p>
<p>上图在检查MongoDB日志以查看进程是否正常运行。</p>
<p>只要你得到这个：[initandlisten]等待端口27017上的某个地方的连接，进程正常运行。</p>
<p>注意：27017是mongod的默认端口。</p>
<p>要停止/重启mongod，请输入：</p>
<p>sudo service mongod stop</p>
<p>sudo service mongod restart</p>
<p>现在，你可以通过打开mongo shell来使用MongoDB：</p>
<p>mongo</p>
<p>4、卸载MongoDB</p>
<p>运行以下命令：</p>
<p>sudo service mongod stop</p>
<p>sudo apt purge mongodb-org*</p>
<p>删除数据库和日志文件(确保备份你要保留的内容)：</p>
<p>sudo rm -r /var/log/mongodb</p>
<p>sudo rm -r /var/lib/mongodb</p>
<p>至此，安装及配置MongoDB的内容讲完了。</p>
]]></content>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
  <entry>
    <title>linux命令学习</title>
    <url>/2021/12/15/linux%E5%91%BD%E4%BB%A4%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>查看linux版本命令: uname -a</p>
<p>DHCP（Dynamic Host Configuration Protocal）:动态主机配置协议。是一个简化主机IP地址分配的TCP/IP协议。保证ip地址不重复分配，也能及时回收ip地址以提高IP地址的利用率。采用DHCP的方法配置计算机IP地址的方案称为动态IP地址。DHCP采用的是客户/服务器模式（Client/Server）。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2023/05/08/test/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>p5000环境安装</title>
    <url>/2021/12/15/p5000%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h1 id="配置深度学习p5000服务器"><a href="#配置深度学习p5000服务器" class="headerlink" title="配置深度学习p5000服务器"></a><center>配置深度学习p5000服务器</center></h1><h3 id="1、安装Ubuntu20-04桌面版：https-baijiahao-baidu-com-s-id-1665555157367951576-amp-wfr-spider-amp-for-pc"><a href="#1、安装Ubuntu20-04桌面版：https-baijiahao-baidu-com-s-id-1665555157367951576-amp-wfr-spider-amp-for-pc" class="headerlink" title="1、安装Ubuntu20.04桌面版：https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc"></a>1、安装Ubuntu20.04桌面版：<a href="https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc">https://baijiahao.baidu.com/s?id=1665555157367951576&amp;wfr=spider&amp;for=pc</a></h3><h3 id="2、终端输入python3，发现系统自带了python3-8-10"><a href="#2、终端输入python3，发现系统自带了python3-8-10" class="headerlink" title="2、终端输入python3，发现系统自带了python3.8.10"></a>2、终端输入python3，发现系统自带了python3.8.10</h3><h3 id="3、配置清华园-测试无效，这里提供思路可以借鉴"><a href="#3、配置清华园-测试无效，这里提供思路可以借鉴" class="headerlink" title="3、配置清华园(测试无效，这里提供思路可以借鉴)"></a>3、配置清华园(测试无效，这里提供思路可以借鉴)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#备份文件</span><br><span class="line">sudo cp /etc/apt/sources.list /home/sources.list.bk</span><br><span class="line">#删除</span><br><span class="line">sudo rm -rf /etc/apt/sources.list</span><br><span class="line">#写入</span><br><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<span id="more"></span>写入如下内容：

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"># 预发布软件源，不建议启用</span><br><span class="line"># deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>保存退出，最后别忘了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<h3 id="4、p5000是Nvidia-Quadro-系列，下载对应系统下run文件（亲测没用）"><a href="#4、p5000是Nvidia-Quadro-系列，下载对应系统下run文件（亲测没用）" class="headerlink" title="4、p5000是Nvidia Quadro 系列，下载对应系统下run文件（亲测没用）"></a>4、p5000是Nvidia Quadro 系列，下载对应系统下run文件（亲测没用）</h3><p>禁用nouveau，这是系统自带的驱动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist.conf</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在文本最后添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">option nouveau modeset=0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>命令窗口会提示warn，无视之。</p>
<p>保存退出，执行以下命令生效：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure>

<p>重启电脑后输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsmod | grep nouveau</span><br></pre></td></tr></table></figure>

<p>没有任何输出说明禁用成功。</p>
<p>在驱动文件所在的文件夹打开终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo bash NVIDIA-Linux-x86_64-450.66.run</span><br></pre></td></tr></table></figure>

<p>安装出错</p>
<p>将镜像改回默认</p>
<p><strong>update后upgrate必须要做！</strong></p>
<p>通过</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Ubuntu-drivers devicces</span><br></pre></td></tr></table></figure>

<p>Ubuntu自己检测nVidia的显卡可选驱动，并用recommend标出推荐，p5000是470</p>
<p>与之前查询一致</p>
<p>之间通过命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ubuntu-drivers autoinstall</span><br></pre></td></tr></table></figure>

<p>等待Ubuntu自己安装驱动，并把最新版cuda 一并安装好</p>
<h3 id="5、安装anaconda"><a href="#5、安装anaconda" class="headerlink" title="5、安装anaconda"></a>5、安装anaconda</h3><p><a href="http://www.anaconda.com/products/individual%E4%B8%8B%E8%BD%BDlinux">www.anaconda.com/products/individual下载linux</a> python3.9版本</p>
<p>下好后cd到文件下载目录，用bash安装</p>
<p>安装好后修改环境变量（没装vim?我用的sudo nano亲测没问题）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/administrator/anaconda3/bin:$PATH&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>最后检查一下是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda -V</span><br></pre></td></tr></table></figure>

<p>结果conda4.10.3,完成</p>
<p>输入python3发现是anaconda里的python版本</p>
<p>介绍一下conda里常用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#创建虚拟环境</span><br><span class="line">conda create -n your_env_name python=X.X（3.6、3.7等）</span><br><span class="line"> </span><br><span class="line">#激活虚拟环境</span><br><span class="line">source activate your_env_name(虚拟环境名称)</span><br><span class="line"> </span><br><span class="line">#退出虚拟环境</span><br><span class="line">source deactivate your_env_name(虚拟环境名称)</span><br><span class="line"> </span><br><span class="line">#删除虚拟环境</span><br><span class="line">conda remove -n your_env_name(虚拟环境名称) --all</span><br><span class="line"> </span><br><span class="line">#查看安装了哪些包</span><br><span class="line">conda list</span><br><span class="line"> </span><br><span class="line">#安装包</span><br><span class="line">conda install package_name(包名)</span><br><span class="line">conda install scrapy==1.3 # 安装指定版本的包</span><br><span class="line">conda install -n 环境名 包名 # 在conda指定的某个环境中安装包</span><br><span class="line"> </span><br><span class="line">#查看当前存在哪些虚拟环境</span><br><span class="line">conda env list </span><br><span class="line">#或 </span><br><span class="line">conda info -e</span><br><span class="line">#或</span><br><span class="line">conda info --envs</span><br><span class="line"> </span><br><span class="line">#检查更新当前conda</span><br><span class="line">conda update conda</span><br><span class="line"> </span><br><span class="line">#更新anaconda</span><br><span class="line">conda update anaconda</span><br><span class="line"> </span><br><span class="line">#更新所有库</span><br><span class="line">conda update --all</span><br><span class="line"> </span><br><span class="line">#更新python</span><br><span class="line">conda update python</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="6、ifconfig无显示"><a href="#6、ifconfig无显示" class="headerlink" title="6、ifconfig无显示"></a>6、ifconfig无显示</h3><p>执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt net-tools</span><br><span class="line">#装好后在执行ifconfig得到ip为172.21.32.106</span><br></pre></td></tr></table></figure>

<p>使用putty连接服务器报错connection refused</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service ssh status</span><br></pre></td></tr></table></figure>

<p>提示ssh.service could not found</p>
<p>安装ssh服务参考：<a href="https://www.cnblogs.com/livelab/p/13033175.html">https://www.cnblogs.com/livelab/p/13033175.html</a></p>
<p>默认情况下，首次安装Ubuntu时，不允许通过SSH进行远程访问。在Ubuntu上启用SSH非常简单。</p>
<p>以root 用户或具有sudo特权的用户执行以下步骤，以在Ubuntu系统上安装并启用SSH：</p>
<p>使用打开终端<code>Ctrl+Alt+T</code>并安装<code>openssh-server</code>软件包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install openssh-server</span><br></pre></td></tr></table></figure>

<p>出现提示时，输入密码，然后按Enter继续安装。</p>
<p>安装完成后，SSH服务将自动启动。您可以通过键入以下命令来验证SSH是否正在运行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl status ssh</span><br></pre></td></tr></table></figure>

<p>输出应告诉您该服务正在运行，并已启用以在系统引导时启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">● ssh.service - OpenBSD Secure Shell server</span><br><span class="line"> Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)</span><br><span class="line"> Active: active (running) since Mon 2020-06-01 12:34:00 CEST; 9h ago</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>按<code>q</code>返回到命令行提示符。</p>
<p>Ubuntu随附了一个名为UFW的防火墙配置工具。如果在系统上启用了防火墙，请确保打开SSH端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw allow ssh</span><br></pre></td></tr></table></figure>

<p>现在，可以从任何远程计算机通过SSH连接到Ubuntu系统。Linux和macOS系统默认安装了SSH客户端。要从Windows计算机连接，使用SSH客户端（例如PuTTY）。亲测成功！</p>
<h3 id="7、使用conda来安装深度学习框架pytorch-避免自己配置cudann等"><a href="#7、使用conda来安装深度学习框架pytorch-避免自己配置cudann等" class="headerlink" title="7、使用conda来安装深度学习框架pytorch,避免自己配置cudann等"></a>7、使用conda来安装深度学习框架pytorch,避免自己配置cudann等</h3><p>去pytorch官网去找下载命令（在自己环境下）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch</span><br></pre></td></tr></table></figure>

<p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gxfw1g9nelj30lz0aeacz.jpg" alt="image.png"></p>
<p>装完基本完事</p>
<h3 id="8、https-www-realvnc-com-en-connect-download-viewer-下载客户端"><a href="#8、https-www-realvnc-com-en-connect-download-viewer-下载客户端" class="headerlink" title="8、https://www.realvnc.com/en/connect/download/viewer/下载客户端"></a>8、<a href="https://www.realvnc.com/en/connect/download/viewer/%E4%B8%8B%E8%BD%BD%E5%AE%A2%E6%88%B7%E7%AB%AF">https://www.realvnc.com/en/connect/download/viewer/下载客户端</a></h3><p>服务器端打开设置-共享-屏幕共享，然后终端运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gsettings set org.gnome.Vino require-encryption false</span><br></pre></td></tr></table></figure>

<p>这句话是降低安全等级的</p>
<p>客户端安装vnc Viewer客户端即可</p>
]]></content>
  </entry>
  <entry>
    <title>ubuntu快照</title>
    <url>/2021/12/18/ubuntu%E5%BF%AB%E7%85%A7/</url>
    <content><![CDATA[<h1 id="增加快照预防系统损坏能及时恢复"><a href="#增加快照预防系统损坏能及时恢复" class="headerlink" title="增加快照预防系统损坏能及时恢复"></a><center>增加快照预防系统损坏能及时恢复</center></h1><p>TimeShift是一个免费工具，类似于Windows中的”系统还原”功能，它允许你最初拍摄系统的快照，然后定期拍摄增量快照， 你可以使用</p>
<p>首先，按ctrl+alt+t打开终端窗口，如果尚未安装Aptik，请在提示符下分别键入以下两个命令，在每个命令后按Enter，以添加PPA并进行更新，sudo apt-add-repository -y ppa:teejee2008/ppa</p>
<p>sudo apt-get update</p>
<p>如果已安装Aptik，则可以安装TimeShift，而无需输入以前的命令，在提示符下键入以下文本并按Enter键。</p>
<p>sudo apt-get install timeshift</p>
<p>出现提示时键入密码并按Enter 。</p>
<p>安装完成后，通过在提示符下键入”exit”并按Enter或单击窗口左上角的” X”按钮来关闭”终端”窗口。</p>
<p>要打开TimeShift，请单击Unity Launcher栏顶部的”搜索”按钮。</p>
<p>在搜索框中输入” timeshift “，键入时显示搜索结果，当显示TimeShift图标时，单击它打开应用程序。</p>
<p>出现询问密码的对话框。 在编辑框中输入密码，然后单击”确定”” ，</p>
<p>此时将显示主TimeShift窗口，并估计系统大小，如果有多个驱动器或分区，则可以使用”Backup Device”下拉列表选择要备份的其他驱动器或分区。<span id="more"></span></p>
<p>快照所需的空间量列在底部状态栏上，快照保存在所选设备上，因此请确保有足够的空间来存储快照，要备份所选的”Backup Device”，请在工具栏上单击”Backup”。</p>
<p>创建快照时，底部状态栏中会显示”正在同步文件… “消息。</p>
<p>快照完成后，会列出系统的日期和时间以及名称和版本，状态栏说明在拍摄快照后，系统有多少空间可用，并说明上次快照的时间。</p>
<p>将鼠标移到”Backup Device”下拉列表上，将向你显示快照保存在所选设备上的路径。</p>
<p>“ TimeShift “目录包含使用TimeShift拍摄的各种快照，包括计划的快照。</p>
<p>“快照”文件夹包含手动拍摄的快照，建议你将快照的文件夹复制到U盘，网络驱动器上。</p>
<p>通过单击”Browse”按钮查看快照中的内容。</p>
<p>将在”文件管理器”窗口中打开快照目录，并列出系统中的目录和文件(无用户文件)。</p>
<p>可以自定义各种设置，例如，设置自动备份和选择何时自动删除旧快照，要访问设置，请单击工具栏上的”设置”。</p>
<p>通过”计划”选项卡，你可以指定执行快照的时间，单击或滑动”开/关”滑块按钮以打开”预定快照”，选中”启用”列中的复选框，以指定快照的时间间隔。</p>
<p>通过”自动删除”标签，你可以自动删除较旧的快照，从而不会耗尽硬盘驱动器上的空间，每种快照都有一个”规则”，为每种类型输入一个”限制”，以告诉TimeShift删除早于指定限制的快照，包括对可用空间小于特定量的限制。</p>
<p>“高级”选项卡允许你从快照中排除特定文件，目录和目录内容，并在快照中包括特定文件和目录。</p>
<p>自定义完设置后，单击”保存””</p>
<p>当你要恢复快照时，打开TimeShift，选择一个快照并单击”Restore “，</p>
<p>注：根据系统状态，你可能必须再次安装TimeShift 。</p>
<p>通过”Restore “对话框上的”Target”选项卡，你可以指定要将所选快照还原到的设备，将鼠标移到列表中的设备上可以显示有关用于恢复快照的设备的详细信息，选择”用于还原快照的设备”和”用于Bootloader安装的设备”。</p>
<p>使用”排除”标签选择要保留其当前设置而不恢复其先前设置的应用程序。</p>
<p>“高级”选项卡允许你从还原的系统中排除特定的文件，目录和目录内容，并在其中包含特定的文件和目录。</p>
<p>要关闭TimeShift，请点击主窗口左上角的” X”按钮。</p>
<p>就像Windows中的”系统还原”一样，你可以简单地将系统还原到以前的工作状态，而无需重新安装系统。</p>
<h3 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h3><h4 id="如果能够进入系统"><a href="#如果能够进入系统" class="headerlink" title="如果能够进入系统"></a>如果能够进入系统</h4><ol>
<li>如果此时还能够进入系统，直接打开 <strong>Timeshift</strong>软件进行还原</li>
<li>在弹出的窗口内点击下一步开始进行还原到选中的节点</li>
<li>还原完成后重启电脑即可。</li>
</ol>
<h4 id="如果只能进入登录界面"><a href="#如果只能进入登录界面" class="headerlink" title="如果只能进入登录界面"></a>如果只能进入登录界面</h4><p>一般系统崩溃后不能进入桌面，但是能够进入登录界面，现象就是在登录界面输入密码后不会进入桌面，那么就要通过命令行的方式进行还原。</p>
<ol>
<li><p>通过<code>Ctrl+Alt+F1</code>（一般是F1-F6都可）进入tty终端：</p>
</li>
<li><p>输入用户和密码登录</p>
</li>
<li><p>执行下面命令获取系统当前可以还原的节点：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timeshift --list</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>输出内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Device : /dev/sdb4</span><br><span class="line">UUID   : 197c4161-abc6-4069-8544-d86594211f04</span><br><span class="line">Path   : /home</span><br><span class="line">Mode   : RSYNC</span><br><span class="line">Device is OK</span><br><span class="line">12 snapshots, 92.5 GB free</span><br><span class="line"></span><br><span class="line">Num     Name                 Tags  Description  </span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">0    &gt;  2018-08-08_11-49-26  O D                </span><br><span class="line">1    &gt;  2018-08-13_23-02-06  O                  </span><br><span class="line">2    &gt;  2018-08-15_22-53-24  O                  </span><br><span class="line">3    &gt;  2018-08-21_09-37-29  O                  </span><br><span class="line">4    &gt;  2018-11-19_17-43-59  O                  </span><br><span class="line">5    &gt;  2019-01-20_19-36-34  O                  </span><br><span class="line">6    &gt;  2019-03-01_11-18-09  O                  </span><br><span class="line">7    &gt;  2019-03-01_14-54-37  O                  </span><br><span class="line">8    &gt;  2019-03-04_14-48-57  O                  </span><br><span class="line">9    &gt;  2019-03-10_20-50-00  O                  </span><br><span class="line">10   &gt;  2019-03-14_11-51-54  O                  </span><br><span class="line">11   &gt;  2019-07-16_16-35-42  O</span><br><span class="line">123456789101112131415161718192021</span><br></pre></td></tr></table></figure></li>
<li><p>选择一个节点进行还原</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timeshift --restore --snapshot &#x27;2019-07-16_16-35-42&#x27; --skip-grub</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<blockquote>
<p>–skip-grub 选项为跳过grub安装，一般来说grub不需要重新安装，除非bios启动无法找到正确的grub启动项，才需要安装。</p>
</blockquote>
<p>在输出的内容中依次输入【Enter】键和【y】键。</p>
<p>当然也可以直接输入下面的命令，忽略交互式的安装界面：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timeshift --restore --snapshot &#x27;2019-07-16_16-35-42&#x27; --skip-grub --scripted</span><br></pre></td></tr></table></figure></li>
</ol>
<h4 id="无法进入系统，通过U盘启动系统"><a href="#无法进入系统，通过U盘启动系统" class="headerlink" title="无法进入系统，通过U盘启动系统"></a>无法进入系统，通过U盘启动系统</h4><p>当登录界面和桌面环境都无法进入时，一般系统已经彻底崩溃，此时只能通过Linux live CD进行还原。</p>
<ol>
<li><p>制作Linux Mint 启动盘，制作过程略。</p>
</li>
<li><p>进入Live系统后打开 <strong>Timeshift</strong> 软件，点击设置按钮，设置快照的存储位置</p>
<p>快照的存储位置是<strong>Timeshift</strong>在做备份的时候就已经设置好的。</p>
</li>
<li><p>后续步骤和[如果能够进入系统]内的还原方式一样。</p>
</li>
</ol>
<p>其实此时还可以通过命令行的方式进行还原，但是首先需要设置快照存储的位置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timeshift --snapshot-device /dev/sdb4</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<p>后续步骤和[如果只能进入登录界面]内的还原方式一样。</p>
<p>参考：<a href="https://blog.csdn.net/wf19930209/article/details/104236358">https://blog.csdn.net/wf19930209/article/details/104236358</a></p>
]]></content>
      <tags>
        <tag>系统备份</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu修改conda镜像源</title>
    <url>/2021/12/18/ubuntu%E4%BF%AE%E6%94%B9conda%E9%95%9C%E5%83%8F%E6%BA%90/</url>
    <content><![CDATA[<h1 id="ubuntu20-04桌面版安装pytorch总因为网络出错"><a href="#ubuntu20-04桌面版安装pytorch总因为网络出错" class="headerlink" title="ubuntu20.04桌面版安装pytorch总因为网络出错"></a>ubuntu20.04桌面版安装pytorch总因为网络出错</h1><p>修改/etc/apt/sources.list更换镜像源无效</p>
<p>后来发现conda单独修改镜像源才可以：</p>
<h2 id="1-打开-condarc文件"><a href="#1-打开-condarc文件" class="headerlink" title="1.打开.condarc文件"></a>1.打开.condarc文件</h2><p>Ubuntu主界面打开终端，执行命令，打开.condarc文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gedit ~/.condarc</span><br></pre></td></tr></table></figure>



<h2 id="2-修改-condarc文件内容"><a href="#2-修改-condarc文件内容" class="headerlink" title="2.修改.condarc文件内容"></a>2.修改.condarc文件内容</h2><p>将以下代码复制到.condarc文件中，然后点击保存</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">channels:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - defaults</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">show_channel_urls:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">channel_alias:</span> <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">default_channels:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/pkgs/main</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/pkgs/free</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/pkgs/r</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/pkgs/pro</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/pkgs/msys</span>2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">custom_channels:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  conda-<span class="symbol">forge:</span> <span class="symbol">https:</span>/<span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  msys2: https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  bioconda: https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  menpo: https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  pytorch: https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  simpleitk: https:/</span><span class="regexp">/mirrors.tuna.tsinghua.edu.cn/anaconda</span><span class="regexp">/cloud</span></span><br></pre></td></tr></table></figure>



<h2 id="3-删除索引缓存"><a href="#3-删除索引缓存" class="headerlink" title="3.删除索引缓存"></a>3.删除索引缓存</h2><p>终端执行命令</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">conda clean -<span class="selector-tag">i</span></span><br></pre></td></tr></table></figure>



<h2 id="4-重启"><a href="#4-重启" class="headerlink" title="4.重启"></a>4.重启</h2><p>以上步骤完成后，一定要重启！！</p>
<p>亲测可用！</p>
]]></content>
      <tags>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>个人网盘搭建</title>
    <url>/2021/12/31/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p><img src="http://pic.cutexin.cn/images/2021/12/31/202112311114464.png" alt="image-20211231111434378"></p>
<h1 id="使用云服务器-zfile搭建私人网盘"><a href="#使用云服务器-zfile搭建私人网盘" class="headerlink" title="使用云服务器+zfile搭建私人网盘"></a>使用云服务器+zfile搭建私人网盘</h1><span id="more"></span>

<p>zfile可以在线预览在线播放并且能生成直链，比较适合我的需求</p>
<p>参考视频及相应文档：</p>
<p><a href="https://www.bilibili.com/video/BV15b4y1z73A?from=search&amp;seid=17374580887922487818&amp;spm_id_from=333.337.0.0">https://www.bilibili.com/video/BV15b4y1z73A?from=search&amp;seid=17374580887922487818&amp;spm_id_from=333.337.0.0</a></p>
<p><a href="https://v2rayn.net/3.html">https://v2rayn.net/3.html</a></p>
<p><a href="https://docs.zfile.vip/#/">https://docs.zfile.vip/#/</a></p>
<h2 id="1、服务器端放行8080端口并安装依赖"><a href="#1、服务器端放行8080端口并安装依赖" class="headerlink" title="1、服务器端放行8080端口并安装依赖"></a>1、服务器端放行8080端口并安装依赖</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># CentOS系统</span><br><span class="line">yum install -y java-1.8.0-openjdk unzip</span><br><span class="line"></span><br><span class="line"># Debian/Ubuntu系统</span><br><span class="line">apt update</span><br><span class="line">apt install -y openjdk-8-jre-headless unzip</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>备注：宝塔放行不行，还要服务器放行</p>
<h2 id="2、下载项目"><a href="#2、下载项目" class="headerlink" title="2、下载项目"></a>2、下载项目</h2><p>下面命令中第一行表示默认安装到用户目录下: <code>~/zfile</code> 下。</p>
<p>对于 <code>root</code> 用户, <code>~</code> = <code>/root</code>, <code>~/zfile</code> 表示在 <code>/root/zfile</code> 路径下。</p>
<p>对于其他用户, <code>~</code> = <code>/hone/用户名</code> 表示在 <code>/home/用户名/</code> 路径下。如对于 <code>oracle</code> 用户, <code>~/zfile</code> 则表示安装在 <code>/home/oracle/zfile</code> 下。</p>
<p>如需更改安装路径, 请自行修改，如 <code>export ZFILE_INSTALL_PATH=/data/zfile</code>，表示安装在 <code>/data/zfile</code> 路径下。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export ZFILE_INSTALL_PATH=~/zfile</span><br><span class="line">mkdir -p $ZFILE_INSTALL_PATH &amp;&amp; cd $ZFILE_INSTALL_PATH</span><br><span class="line">wget https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class="line">unzip zfile-release.war &amp;&amp; rm -rf zfile-release.war</span><br><span class="line">chmod +x $ZFILE_INSTALL_PATH/bin/*.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>备注：改到/www/wwwroot/下，根目录下安装绑定域名会报错，报错删了重装就好，不过删不干净要手动删除。</p>
<p>更新或重装执行如下步骤：</p>
<p>如果没修改过安装路径，则停止程序后，删除安装文件夹即可，默认命令为：</p>
<p>（如修改过安装路径，则替换下方命令中的 <code>~/zfile</code> 部分为你的安装路径即可）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 停止程序</span></span><br><span class="line">~/zfile/bin/stop.sh</span><br><span class="line"><span class="comment"># 删除安装文件夹 </span></span><br><span class="line">rm -rf ~/zfile</span><br><span class="line"><span class="comment"># 重新下载安装最新版</span></span><br><span class="line"><span class="built_in">export</span> ZFILE_INSTALL_PATH=~/zfile</span><br><span class="line">mkdir -p <span class="variable">$ZFILE_INSTALL_PATH</span> &amp;&amp; <span class="built_in">cd</span> <span class="variable">$ZFILE_INSTALL_PATH</span></span><br><span class="line">wget https://c.jun6.net/ZFILE/zfile-release.war</span><br><span class="line">unzip zfile-release.war &amp;&amp; rm -rf zfile-release.war</span><br><span class="line">chmod +x <span class="variable">$ZFILE_INSTALL_PATH</span>/bin/*.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3、常用命令"><a href="#3、常用命令" class="headerlink" title="3、常用命令"></a>3、常用命令</h2><p>以下为默认未修改安装路径下的情况，如修改了安装路径请自行更改命令所在路径。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~/zfile/bin/start.sh       <span class="comment"># 启动项目</span></span><br><span class="line">~/zfile/bin/stop.sh        <span class="comment"># 停止项目</span></span><br><span class="line">~/zfile/bin/restart.sh     <span class="comment"># 重启项目</span></span><br></pre></td></tr></table></figure>

<p>安装完启动下，记得改目录</p>
<h2 id="4、初始化安装"><a href="#4、初始化安装" class="headerlink" title="4、初始化安装"></a>4、初始化安装</h2><p>初始安装: http://服务器地址/:8080/#/install</p>
<p>管理后台: http://服务器地址/:8080/#/admin</p>
<p>备注：打不开管理地址试试http://服务器地址/:8080/admin</p>
<h2 id="5、设置本地目录"><a href="#5、设置本地目录" class="headerlink" title="5、设置本地目录"></a>5、设置本地目录</h2><p>去宝塔下/www/wwwroot/zfile 下新建文件夹files,赋予777权限，里面再建立文件夹即可</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/31/202112311132231.png" alt="image-20211231113201138"></p>
<p>去zfile管理后台设置添加驱动器</p>
<h2 id="6、绑定域名"><a href="#6、绑定域名" class="headerlink" title="6、绑定域名"></a>6、绑定域名</h2><p>新建站点，使用二级站点pan.cutexin.cn,根目录要改成/www/wwwroot/zfile </p>
<p><img src="http://pic.cutexin.cn/images/2021/12/31/202112311135567.png" alt="image-20211231113553493"></p>
<p>开启ssl，然后开启反向代理：</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/31/202112311137083.png" alt="image-20211231113714989"></p>
<p>删除目录下三个文件</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/31/202112311138627.png" alt="image-20211231113832545">重启面板即可</p>
<h2 id="7、设置目录密码和名称"><a href="#7、设置目录密码和名称" class="headerlink" title="7、设置目录密码和名称"></a>7、设置目录密码和名称</h2><p>在对应目录下建立password.txt和readme.md编辑对应内容即可</p>
<p>至此就可以用pan.cutexin.cn来在任何有网地方访问文件了，也可以用蓝奏云，账号手机号来部署博客文件，下载还行，不走服务器流量，缺点是限制文件100m大小</p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>私人网盘</tag>
      </tags>
  </entry>
  <entry>
    <title>云笔记leanote搭建</title>
    <url>/2022/01/10/%E4%BA%91%E7%AC%94%E8%AE%B0leanote%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="ubuntu下leanote个人云笔记搭建"><a href="#ubuntu下leanote个人云笔记搭建" class="headerlink" title="ubuntu下leanote个人云笔记搭建"></a>ubuntu下leanote个人云笔记搭建</h1><p><img src="http://pic.cutexin.cn/images/2022/01/10/202201102054651.png" alt="image-20220110205445493"><span id="more"></span></p>
<p>工具在pan.cutexin.cn中</p>
<p>安装mangodb数据库版本过高会出错</p>
<p>卸载参考博客linux卸载mongodb</p>
<p>安装步骤:</p>
<p>下载leanote二进制版。</p>
<p>安装mongodb。</p>
<p>导入初始数据。</p>
<p>配置leanote。</p>
<p>运行leanote。</p>
<p>\1. 下载 leanote 二进制版</p>
<p>由此处下载 leanote 最新二进制版。</p>
<p>假设将文件下载到/home/user1目录下, 解压文件从而在/home/user1目录下生成leanote目录：</p>
<p>$&gt; cd /home/user1</p>
<p>$&gt; tar -xzvf leanote-darwin-amd64.v2.0.bin.tar.gz</p>
<p>\2. 安装 mongodb</p>
<p>2.1 安装mongodb</p>
<p>到 mongodb 官网 下载相应系统的最新版安装包，或者从以下链接下载旧版本：</p>
<p>64位 linux mongodb 3.0.1 下载链接: <a href="https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz">https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.1.tgz</a></p>
<p>下载到/home/user1下, 直接解压即可:</p>
<p>$&gt; cd /home/user1</p>
<p>$&gt; tar -xzvf mongodb-linux-x86_64-3.0.1.tgz/</p>
<p>为了快速使用mongodb命令, 可以配置环境变量。编辑~/.profile或/etc/profile文件， 将mongodb/bin路径加入即可:</p>
<p>$&gt; sudo vim /etc/profile</p>
<p>此处实例使用了vim文本编辑器，你可以使用自己熟悉的编辑器。</p>
<p>在/etc/profile中添加以下行，注意把用户名（user1）和相应的文件目录名（mongodb-linux-x86_64-3.0.1）替换成自己系统中的名称：</p>
<p>export PATH=$PATH:/home/user1/mongodb-linux-x86_64-3.0.1/bin</p>
<p><img src="http://pic.cutexin.cn/images/2022/01/10/202201102149754.png" alt="image-20220110214947649"></p>
<p>保存修改后，在终端运行以下命令使环境变量生效:</p>
<p>$&gt; source /etc/profile</p>
<p>2.2 测试mongodb安装</p>
<p>先在/home/user1下新建一个目录data存放mongodb数据:</p>
<p>mkdir /home/user1/data</p>
<p>用以下命令启动mongod:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongod --dbpath /home/user1/data</span><br></pre></td></tr></table></figure>

<p>这时mongod已经启动，重新打开一个终端, 键入mongo进入交互程序：</p>
<p>$&gt; mongo</p>
<p>&gt; show dbs</p>
<p>…数据库列表</p>
<p>mongodb安装到此为止, 下面为mongodb导入leanote初始数据。</p>
<p>\3. 导入初始数据</p>
<p>leanote初始数据存放在/home/user1/leanote/mongodb_backup/leanote_install_data中。</p>
<p>打开终端， 输入以下命令导入数据。</p>
<p>$&gt; mongorestore -h localhost -d leanote –dir /home/user1/leanote/mongodb_backup/leanote_install_data/</p>
<p>现在在mongodb中已经新建了leanote数据库, 可用命令查看下leanote有多少张”表”:</p>
<p>$&gt; mongo</p>
<p>&gt; show dbs #　查看数据库</p>
<p>leanote0.203125GB</p>
<p>local0.078125GB</p>
<p>&gt; use leanote # 切换到leanote</p>
<p>switched to db leanote</p>
<p>&gt; show collections # 查看表</p>
<p>files</p>
<p>has_share_notes</p>
<p>note_content_histories</p>
<p>note_contents</p>
<p>….</p>
<p>初始数据的users表中已有2个用户:</p>
<p>user1 username: admin, password: abc123 (管理员, 只有该用户才有权管理后台, 请及时修改密码)</p>
<p>user2 username: <a href="mailto:&#x64;&#x65;&#109;&#x6f;&#x40;&#108;&#101;&#97;&#x6e;&#x6f;&#x74;&#x65;&#46;&#99;&#x6f;&#109;">&#x64;&#x65;&#109;&#x6f;&#x40;&#108;&#101;&#97;&#x6e;&#x6f;&#x74;&#x65;&#46;&#99;&#x6f;&#109;</a>, password: <a href="mailto:&#x64;&#101;&#x6d;&#x6f;&#x40;&#x6c;&#x65;&#x61;&#110;&#111;&#x74;&#101;&#46;&#99;&#x6f;&#x6d;">&#x64;&#101;&#x6d;&#x6f;&#x40;&#x6c;&#x65;&#x61;&#110;&#111;&#x74;&#101;&#46;&#99;&#x6f;&#x6d;</a> (仅供体验使用)账号修改</p>
<p>服务自启动</p>
<p>一个简单的 leanote 服务脚本sudo vi /etc/systemd/system/leanote.service：</p>
<p>[Unit]</p>
<p>Description=Leanote, Not Just A Notepad!</p>
<p>After=syslog.target network.target mongod.service</p>
<p>[Service]</p>
<p>User=root</p>
<p>ExecStart=/home/ubuntu/leanote/bin/run.sh</p>
<p>[Install]</p>
<p>WantedBy=multi-user.target</p>
<p>之后</p>
<p>sudo systemctl enable leanote</p>
<p>sudo systemctl start leanote</p>
<p>如果启动失败，先确认leanote/bin/run.sh是否可执行：</p>
<p>sudo chmod +x leanote/bin/run.sh4. 配置leanote</p>
<p>leanote的配置存储在文件conf/app.conf中。</p>
<p>请务必修改app.secret一项, 在若干个随机位置处，将字符修改成一个其他的值, 否则会有安全隐患!</p>
<p>其它的配置可暂时保持不变, 若需要配置数据库信息, 请参照 leanote问题汇总。</p>
<p>\5. 运行leanote</p>
<p>注意: 在此之前请确保mongodb已在运行!</p>
<p>新开一个窗口, 运行:</p>
<p>$&gt; cd /home/user1/leanote/bin</p>
<p>$&gt; bash run.sh</p>
<p>最后出现以下信息证明运行成功:</p>
<p>…</p>
<p>TRACE 2013/06/06 15:01:27 watcher.go:72: Watching: /home/life/leanote/bin/src/github.com/leanote/leanote/conf/routes</p>
<p>Go to /@tests to run the tests.</p>
<p>Listening on :9000…</p>
<p>恭喜你, 打开浏览器输入:<a href="http://localhost:9000体验leanote吧">http://localhost:9000体验leanote吧</a>!</p>
<p>记得开放9000端口</p>
<p>注意!!!!!!!!!!!!!!</p>
<p>按照本教程启动Mongodb是没有权限控制的, 如果你的Leanote服务器暴露在外网, 任何人都可以访问你的Mongodb并修改, 所以这是极其危险的!!!!!!!!!!! 请务必为Mongodb添加用户名和密码并以auth启动, 方法请见: 为mongodb数据库添加用户</p>
<p>leanote安装/配置问题汇总</p>
<p>如果运行有问题或想要进一步配置leanote, 请参照 leanote问题汇总。</p>
<p>\6. 为mongodb数据库添加用户</p>
<p>像mysql一样有root用户, mongodb初始是没有用户的, 这样很不安全, 所以要为leanote数据库新建一个用户来连接leanote数据库(注意, 并不是为leanote的表users里新建用户, 而是新建一个连接leanote数据库的用户, 类似mysql的root用户).</p>
<p>mognodb v2与v3创建用户命令有所不同</p>
<p>mongodb v2 创建用户如下:</p>
<p># 首先切换到leanote数据库下</p>
<p>&gt; use leanote;</p>
<p># 添加一个用户root, 密码是abc123</p>
<p>&gt; db.addUser(“root”, “abc123”);</p>
<p>{</p>
<p>“_id” : ObjectId(“53688d1950cc1813efb9564c”),</p>
<p>“user” : “root”,</p>
<p>“readOnly” : false,</p>
<p>“pwd” : “e014bfea4a9c3c27ab34e50bd1ef0955”</p>
<p>}</p>
<p># 测试下是否正确</p>
<p>&gt; db.auth(“root”, “abc123”);</p>
<p>1 # 返回1表示正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">db.createUser(&#123;user: &#x27;root&#x27;,pwd: &#x27;abc123&#x27;,roles: [&#123;role: &#x27;dbOwner&#x27;,db: &#x27;leanote&#x27;&#125;]&#125;);</span><br></pre></td></tr></table></figure>

<p>mongodb v3 创建用户如下:</p>
<p># 首先切换到leanote数据库下</p>
<p>&gt; use leanote;</p>
<p># 添加一个用户root, 密码是abc123</p>
<p>&gt; db.createUser({</p>
<p>user: ‘root’,</p>
<p>pwd: ‘abc123’,</p>
<p>roles: [{role: ‘dbOwner’, db: ‘leanote’}]</p>
<p>});</p>
<p># 测试下是否正确</p>
<p>&gt; db.auth(“root”, “abc123”);</p>
<p>1 # 返回1表示正确</p>
<p>用户添加好后重新运行下mongodb, 并开启权限验证. 在mongod的终端按ctrl+c即可退出mongodb.</p>
<p>启动mongodb:</p>
<p>$&gt; mongod –dbpath /home/user1/data –auth</p>
<p>还要修改配置文件 : 修改 leanote/conf/app.conf:</p>
<p>db.host=localhost</p>
<p>db.port=27017</p>
<p>db.dbname=leanote # required</p>
<p>db.username=root # if not exists, please leave blank</p>
<p>db.password=abc123 # if not exists, please leave blank为Leanote指定超级管理员帐户(admin用户)</p>
<p>Leanote默认超级管理员为admin, 且一旦不小心修改了username则不能改回. 此时可修改配置文件app.conf, 比如指定用户life为超级管理员, 修改或/添加一行:</p>
<p>adminUsername=life</p>
<p>全部完成后，运行：</p>
<p>nohup mongod –dbpath /home/sxf/mongodb/data –auth &amp;</p>
<p>nohup bash /home/sxf/leanote/bin/run.sh &amp;</p>
<p>注意：最后一步不好使，使用宝塔面板下守护进程开启</p>
<p>mongod要用绝对路径！！！</p>
<p>手机端还会有问题，到时候再看看吧！</p>
]]></content>
      <tags>
        <tag>leanote</tag>
      </tags>
  </entry>
  <entry>
    <title>使用树莓派3B+搭建局域网文件服务器</title>
    <url>/2021/12/15/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE3B+%E6%90%AD%E5%BB%BA%E5%B1%80%E5%9F%9F%E7%BD%91%E6%96%87%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="使用树莓派3B-搭建局域网文件服务器！"><a href="#使用树莓派3B-搭建局域网文件服务器！" class="headerlink" title="使用树莓派3B+搭建局域网文件服务器！"></a><center>使用树莓派3B+搭建局域网文件服务器！</center></h1><p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeiaikemhj30zn0pc7bw.jpg" alt="屏幕截图 2021-12-15 122129.png"></p>
<span id="more"></span>

<p>步骤：</p>
<p>为树莓派3B+安装raspberry pi操作系统</p>
<p>安装samba并配置文件</p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxej8jvvg2j32700zjgvs.jpg" alt="微信图片_20211215121933.jpg"></p>
<p>添加samba组用户</p>
<p>新建目录chmod赋予权限777并挂载移动硬盘到此目录下：第一次插移动硬盘自动挂载，挂载失败用umount命令解除挂载重新再挂</p>
<p>映射硬盘到自己本地</p>
<p>手机端部署：安装es文件浏览器，效果如下</p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeilurp8pj30sq1nxmza.jpg" alt="微信图片_20211214222834.jpg"></p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gxeimkegfhj30u01uowj1.jpg" alt="微信图片_20211214222953.jpg"></p>
<p>部分电脑由于组策略无法访问</p>
<p>pi文件夹记得隐藏</p>
<p>ip地址动态分配导致的问题在etc/dhcpcd.conf下更改配置文件，41到44行取消注释更改静态路由，广播地址即可解决</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>树莓派负载小，配置完以后显示器也不需要连接，就可以实现各个操作系统以及平台的文件共享，效果还是不错的！</p>
<p>文件的传输速度受到树莓派3B+没有usb3.0接口的影响，以后搭建家里用的nas可以考虑升级固态和新接口平台！</p>
<p>至于改进的地方：风扇并不是温控的，有噪声，可以考虑改成温控的。3代树莓派通电就开机，可以尝试接入开关电源，或者加入按键按钮改写代码，网上有人已经实现了，用按钮开关连接两个引脚。</p>
<h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><h2 id="https-blog-csdn-net-zlllg-article-details-88547648"><a href="#https-blog-csdn-net-zlllg-article-details-88547648" class="headerlink" title="https://blog.csdn.net/zlllg/article/details/88547648"></a><a href="https://blog.csdn.net/zlllg/article/details/88547648">https://blog.csdn.net/zlllg/article/details/88547648</a></h2>]]></content>
      <tags>
        <tag>树莓派</tag>
        <tag>samba局域网文件服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>为博客代码块增加复制按钮！</title>
    <url>/2021/11/29/%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A2%9E%E5%8A%A0%E5%A4%8D%E5%88%B6%E6%8C%89%E9%92%AE/</url>
    <content><![CDATA[<p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gww8nb5784j30uc046gm0.jpg"></p>
<p>之前博客文章出现代码块内容不可复制，于是就给它进行完善一下</p>
<span id="more"></span>

<p>搜寻资料意外发现next主题自带了复制按钮的功能，搜索关键字copy找到对应的位置如下</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301941393.png" alt="image-20211230194157344"></p>
<p>enable是复制按钮的开关，第二个字段不开会不知道复制成功不成功的效果。（开启以后的点击按钮会显示一个对号）</p>
<p>style这三种风格，随便选取一种就好了，我选择了mac,效果就是封面图，至此已经完成！</p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>文章加密</title>
    <url>/2021/11/29/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h3 id="一-编辑-themes-next-layout-partials-head-swig在如下位置添加代码"><a href="#一-编辑-themes-next-layout-partials-head-swig在如下位置添加代码" class="headerlink" title="一.编辑/themes/next/layout/_partials/head.swig在如下位置添加代码"></a>一.编辑<code>/themes/next/layout/_partials/head.swig</code>在如下位置添加代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    (function()&#123;</span><br><span class="line">        if(&#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">            if (prompt(&#x27;请输入密码&#x27;) !== &#x27;&#123;&#123; page.password &#125;&#125;&#x27;)&#123;</span><br><span class="line">                alert(&#x27;密码错误&#x27;);</span><br><span class="line">                history.back();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>之后，在你想要加密的文章的头文件里添加上<code>password: xxxxxx </code>即可。</p>
<h3 id="二-也是我自己采用的加密方法：装插件"><a href="#二-也是我自己采用的加密方法：装插件" class="headerlink" title="二.也是我自己采用的加密方法：装插件"></a>二.也是我自己采用的加密方法：装插件</h3><h4 id="1-npm-install-–save-hexo-blog-encrypt"><a href="#1-npm-install-–save-hexo-blog-encrypt" class="headerlink" title="1.npm install –save hexo-blog-encrypt"></a>1.npm install –save hexo-blog-encrypt</h4><h4 id="2-要为一篇文章添加密码查看功能，只需要在文章信息头部添加-password-字段即可："><a href="#2-要为一篇文章添加密码查看功能，只需要在文章信息头部添加-password-字段即可：" class="headerlink" title="2.要为一篇文章添加密码查看功能，只需要在文章信息头部添加 password 字段即可："></a>2.要为一篇文章添加密码查看功能，只需要在文章信息头部添加 <code>password</code> 字段即可：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2021-04-13 21:18:02</span><br><span class="line">password: hello</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="3-在Hexo主配置文件-config-yml-中添加如下配置："><a href="#3-在Hexo主配置文件-config-yml-中添加如下配置：" class="headerlink" title="3.在Hexo主配置文件 _config.yml 中添加如下配置："></a>3.在Hexo主配置文件 <code>_config.yml</code> 中添加如下配置：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Security</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  silent: true</span><br><span class="line">  abstract: 这是一篇加密文章，需要密码才能继续阅读。</span><br><span class="line">  message: 当前文章暂不对外可见，请输入密码后查看！</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: private, password: hello&#125;</span><br><span class="line">  wrong_pass_message: 抱歉，您输入的密码错误，请检查后重新输入。</span><br><span class="line">  wrong_hash_message: 抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。</span><br></pre></td></tr></table></figure>

<p>就可以按照标签类加密</p>
<p>进阶教程：<a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/</a></p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>测试</title>
    <url>/2021/12/30/%E6%B5%8B%E8%AF%95%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p><a href="https://www.lanzoup.com/iUdRWy5buyj">测试下载</a></p>
<p>密码：6zsn</p>


<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">
<iframe src="//player.bilibili.com/player.html?aid=632086866&bvid=BV15b4y1z73A&cid=381646443&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div>



]]></content>
  </entry>
  <entry>
    <title>点击烟花爆炸效果</title>
    <url>/2021/11/29/%E7%82%B9%E5%87%BB%E7%83%9F%E8%8A%B1%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h2 id="动手做烟花特效！"><a href="#动手做烟花特效！" class="headerlink" title="动手做烟花特效！"></a><center>动手做烟花特效！</center></h2><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gww78e8cl5j30hv0fjgrj.jpg"></p>
<span id="more"></span>

<h4 id="1-themes-你选择的主题-source-js-下新建文件-firework-js-，添加代码："><a href="#1-themes-你选择的主题-source-js-下新建文件-firework-js-，添加代码：" class="headerlink" title="1. themes/你选择的主题/source/js 下新建文件 firework.js ，添加代码："></a>1. themes/你选择的主题/source/js 下新建文件 firework.js ，添加代码：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;use strict&quot;;</span><br><span class="line">function updateCoords(e) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[0].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line">function setParticuleDirection(e) &#123;</span><br><span class="line">  var t = (anime.random(0, 360) * Math.PI) / 180,</span><br><span class="line">    a = anime.random(50, 180),</span><br><span class="line">    n = [-1, 1][anime.random(0, 1)] * a;</span><br><span class="line">  return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line">function createParticule(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(0, colors.length - 1)]),</span><br><span class="line">    (a.radius = anime.random(16, 32)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function createCircle(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = &quot;#F00&quot;),</span><br><span class="line">    (a.radius = 0.1),</span><br><span class="line">    (a.alpha = 0.5),</span><br><span class="line">    (a.lineWidth = 6),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = 1);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function renderParticule(e) &#123;</span><br><span class="line">  for (var t = 0; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function animateParticules(e, t) &#123;</span><br><span class="line">  for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: function (e) &#123;</span><br><span class="line">        return e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: function (e) &#123;</span><br><span class="line">        return e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: 0.1,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(80, 160),</span><br><span class="line">      lineWidth: 0,</span><br><span class="line">      alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: 0,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function debounce(e, t) &#123;</span><br><span class="line">  var a;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var n = this,</span><br><span class="line">      i = arguments;</span><br><span class="line">    clearTimeout(a),</span><br><span class="line">      (a = setTimeout(function () &#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var canvasEl = document.querySelector(&quot;.fireworks&quot;);</span><br><span class="line">if (canvasEl) &#123;</span><br><span class="line">  var ctx = canvasEl.getContext(&quot;2d&quot;),</span><br><span class="line">    numberOfParticules = 30,</span><br><span class="line">    pointerX = 0,</span><br><span class="line">    pointerY = 0,</span><br><span class="line">    tap = &quot;mousedown&quot;,</span><br><span class="line">    colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;],</span><br><span class="line">    setCanvasSize = debounce(function () &#123;</span><br><span class="line">      (canvasEl.width = 2 * window.innerWidth),</span><br><span class="line">        (canvasEl.height = 2 * window.innerHeight),</span><br><span class="line">        (canvasEl.style.width = window.innerWidth + &quot;px&quot;),</span><br><span class="line">        (canvasEl.style.height = window.innerHeight + &quot;px&quot;),</span><br><span class="line">        canvasEl.getContext(&quot;2d&quot;).scale(2, 2);</span><br><span class="line">    &#125;, 500),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: 1 / 0,</span><br><span class="line">      update: function () &#123;</span><br><span class="line">        ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  document.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    function (e) &#123;</span><br><span class="line">      &quot;sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;A&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        &quot;IMG&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !1</span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);</span><br><span class="line">&#125;</span><br><span class="line">(&quot;use strict&quot;);</span><br><span class="line">function updateCoords(e) &#123;</span><br><span class="line">  (pointerX =</span><br><span class="line">    (e.clientX || e.touches[0].clientX) -</span><br><span class="line">    canvasEl.getBoundingClientRect().left),</span><br><span class="line">    (pointerY =</span><br><span class="line">      e.clientY || e.touches[0].clientY - canvasEl.getBoundingClientRect().top);</span><br><span class="line">&#125;</span><br><span class="line">function setParticuleDirection(e) &#123;</span><br><span class="line">  var t = (anime.random(0, 360) * Math.PI) / 180,</span><br><span class="line">    a = anime.random(50, 180),</span><br><span class="line">    n = [-1, 1][anime.random(0, 1)] * a;</span><br><span class="line">  return &#123; x: e.x + n * Math.cos(t), y: e.y + n * Math.sin(t) &#125;;</span><br><span class="line">&#125;</span><br><span class="line">function createParticule(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = colors[anime.random(0, colors.length - 1)]),</span><br><span class="line">    (a.radius = anime.random(16, 32)),</span><br><span class="line">    (a.endPos = setParticuleDirection(a)),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.fillStyle = a.color),</span><br><span class="line">        ctx.fill();</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function createCircle(e, t) &#123;</span><br><span class="line">  var a = &#123;&#125;;</span><br><span class="line">  return (</span><br><span class="line">    (a.x = e),</span><br><span class="line">    (a.y = t),</span><br><span class="line">    (a.color = &quot;#F00&quot;),</span><br><span class="line">    (a.radius = 0.1),</span><br><span class="line">    (a.alpha = 0.5),</span><br><span class="line">    (a.lineWidth = 6),</span><br><span class="line">    (a.draw = function () &#123;</span><br><span class="line">      (ctx.globalAlpha = a.alpha),</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, 0, 2 * Math.PI, !0),</span><br><span class="line">        (ctx.lineWidth = a.lineWidth),</span><br><span class="line">        (ctx.strokeStyle = a.color),</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        (ctx.globalAlpha = 1);</span><br><span class="line">    &#125;),</span><br><span class="line">    a</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line">function renderParticule(e) &#123;</span><br><span class="line">  for (var t = 0; t &lt; e.animatables.length; t++) &#123;</span><br><span class="line">    e.animatables[t].target.draw();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">function animateParticules(e, t) &#123;</span><br><span class="line">  for (var a = createCircle(e, t), n = [], i = 0; i &lt; numberOfParticules; i++) &#123;</span><br><span class="line">    n.push(createParticule(e, t));</span><br><span class="line">  &#125;</span><br><span class="line">  anime</span><br><span class="line">    .timeline()</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: n,</span><br><span class="line">      x: function (e) &#123;</span><br><span class="line">        return e.endPos.x;</span><br><span class="line">      &#125;,</span><br><span class="line">      y: function (e) &#123;</span><br><span class="line">        return e.endPos.y;</span><br><span class="line">      &#125;,</span><br><span class="line">      radius: 0.1,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">    &#125;)</span><br><span class="line">    .add(&#123;</span><br><span class="line">      targets: a,</span><br><span class="line">      radius: anime.random(80, 160),</span><br><span class="line">      lineWidth: 0,</span><br><span class="line">      alpha: &#123; value: 0, easing: &quot;linear&quot;, duration: anime.random(600, 800) &#125;,</span><br><span class="line">      duration: anime.random(1200, 1800),</span><br><span class="line">      easing: &quot;easeOutExpo&quot;,</span><br><span class="line">      update: renderParticule,</span><br><span class="line">      offset: 0,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line">function debounce(e, t) &#123;</span><br><span class="line">  var a;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var n = this,</span><br><span class="line">      i = arguments;</span><br><span class="line">    clearTimeout(a),</span><br><span class="line">      (a = setTimeout(function () &#123;</span><br><span class="line">        e.apply(n, i);</span><br><span class="line">      &#125;, t));</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">var canvasEl = document.querySelector(&quot;.fireworks&quot;);</span><br><span class="line">if (canvasEl) &#123;</span><br><span class="line">  var ctx = canvasEl.getContext(&quot;2d&quot;),</span><br><span class="line">    numberOfParticules = 30,</span><br><span class="line">    pointerX = 0,</span><br><span class="line">    pointerY = 0,</span><br><span class="line">    tap = &quot;mousedown&quot;,</span><br><span class="line">    colors = [&quot;#FF1461&quot;, &quot;#18FF92&quot;, &quot;#5A87FF&quot;, &quot;#FBF38C&quot;],</span><br><span class="line">    setCanvasSize = debounce(function () &#123;</span><br><span class="line">      (canvasEl.width = 2 * window.innerWidth),</span><br><span class="line">        (canvasEl.height = 2 * window.innerHeight),</span><br><span class="line">        (canvasEl.style.width = window.innerWidth + &quot;px&quot;),</span><br><span class="line">        (canvasEl.style.height = window.innerHeight + &quot;px&quot;),</span><br><span class="line">        canvasEl.getContext(&quot;2d&quot;).scale(2, 2);</span><br><span class="line">    &#125;, 500),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">      duration: 1 / 0,</span><br><span class="line">      update: function () &#123;</span><br><span class="line">        ctx.clearRect(0, 0, canvasEl.width, canvasEl.height);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  document.addEventListener(</span><br><span class="line">    tap,</span><br><span class="line">    function (e) &#123;</span><br><span class="line">      &quot;sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;toggle-sidebar&quot; !== e.target.id &amp;&amp;</span><br><span class="line">        &quot;A&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        &quot;IMG&quot; !== e.target.nodeName &amp;&amp;</span><br><span class="line">        (render.play(), updateCoords(e), animateParticules(pointerX, pointerY));</span><br><span class="line">    &#125;,</span><br><span class="line">    !1</span><br><span class="line">  ),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    window.addEventListener(&quot;resize&quot;, setCanvasSize, !1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-在-themes-你选择的主题-layout-layout-swig-下添加："><a href="#2-在-themes-你选择的主题-layout-layout-swig-下添加：" class="headerlink" title="2.在 themes/你选择的主题/layout/layout.swig 下添加："></a>2.在 themes/你选择的主题/layout/layout.swig 下添加：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt; </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt; </span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/firework.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>烟花</tag>
      </tags>
  </entry>
  <entry>
    <title>看板娘设置</title>
    <url>/2021/11/29/%E7%9C%8B%E6%9D%BF%E5%A8%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="制作好玩好看的二次元人物到博客！"><a href="#制作好玩好看的二次元人物到博客！" class="headerlink" title="制作好玩好看的二次元人物到博客！"></a><center>制作好玩好看的二次元人物到博客！</center></h1><p><img src="https://tva1.sinaimg.cn/large/0081YlEMly1gwwc6wltwjj30b808qwhg.jpg"></p>
<span id="more"></span>

<h3 id="1-下载代码。解压到next-source-下"><a href="#1-下载代码。解压到next-source-下" class="headerlink" title="1.下载代码。解压到next\source\下"></a>1.下载<a href="https://github.com/stevenjoezhang/live2d-widget">代码</a>。解压到next\source\下</h3><h3 id="2-修改配置文件：更改live2d-widget下的autoload-js文件"><a href="#2-修改配置文件：更改live2d-widget下的autoload-js文件" class="headerlink" title="2.修改配置文件：更改live2d-widget下的autoload.js文件"></a>2.修改配置文件：更改live2d-widget下的autoload.js文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 注意：live2d_path 参数应使用绝对路径</span><br><span class="line">//const live2d_path = &quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget@latest/&quot;;</span><br><span class="line">const live2d_path = &quot;/live2d-widget/&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-修改-themes-next-layout-下的-layout-swing或者-layout-swig文件，在head标签中添加一行代码。"><a href="#3-修改-themes-next-layout-下的-layout-swing或者-layout-swig文件，在head标签中添加一行代码。" class="headerlink" title="3.修改/themes/next/layout/下的_layout.swing或者_layout.swig文件，在head标签中添加一行代码。"></a>3.修改/themes/next/layout/下的_layout.swing或者_layout.swig文件，在head标签中添加一行代码。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-在theme-next-config-yml中-新增如下内容："><a href="#4-在theme-next-config-yml中-新增如下内容：" class="headerlink" title="4.在theme/next/_config.yml中,新增如下内容："></a>4.在theme/next/_config.yml中,新增如下内容：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h3 id="5-至此配置基本完成"><a href="#5-至此配置基本完成" class="headerlink" title="5.至此配置基本完成"></a>5.至此配置基本完成</h3><p>实际使用发现手机版展示不了，在theme/next/_config.yml中,加入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mobile:</span><br><span class="line">  show: true ##移动端是否显示</span><br></pre></td></tr></table></figure>

<p>也没有，不过这个不是很重要的功能，暂时就这样，以后有时间再弄</p>
<p>贴个网址吧：<a href="https://www.i4k.xyz/article/cungudafa/104282643">https://www.i4k.xyz/article/cungudafa/104282643</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>教程</tag>
        <tag>看板娘</tag>
      </tags>
  </entry>
  <entry>
    <title>自建图床</title>
    <url>/2021/12/30/%E8%87%AA%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    <content><![CDATA[<h2 id="使用chevereto-PicGo-云服务器搭建自己的图床！"><a href="#使用chevereto-PicGo-云服务器搭建自己的图床！" class="headerlink" title="使用chevereto+PicGo+云服务器搭建自己的图床！"></a>使用chevereto+PicGo+云服务器搭建自己的图床！</h2><p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301106952.png" alt="image-20211230110612031"></p>
<span id="more"></span>

<p>之前一直使用的都是微博图床来放置自己博客里的图片，总觉得不太安全，于是就自己动手在云服务器上搭建自己的图床</p>
<p>服务器基础环境是Ubuntu+lnmp，安装宝塔。添加站点，使用二级域名。去chevereto<a href="https://github.com/rodber/chevereto-free">官网</a>下载压缩包，Release选择截至目前最新版本的1.6.1出现问题（打不开域名），最终选择之前版本1.4.1，测试没问题</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301121435.png" alt="image-20211230112107385"></p>
<p>选择tar.gz下载或<a href="http://pan.cutexin.cn/directlink/1/%E6%96%87%E6%A1%A3/1.1-17.10.30-release.tar.gz">下载</a>，然后上传到服务器网站根目录下面，删除原有文件，解压后剪切子文件到根目录</p>
<p>安装ssl证书，修改伪静态添加如下代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line"></span><br><span class="line">try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>保存，重启nginx。</p>
<p>此时就可以打开域名进行安装了，设置好数据库用户名即可。</p>
<p>下载PicGo工具：</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301128226.png" alt="image-20211230112844145"></p>
<p>直接从typora偏好设置里点击下载就会自动打开官网选择对应版本下载安装即可。然后配置改成上图</p>
<p>打开Picgo,下载chevereto插件，配置端口号36677，设置开机自启，开启时间戳重命名，避免图片名相同造成上传失败</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301132543.png" alt="image-20211230113224504"></p>
<p>设置其为默认图床，填写url和key</p>
<p>url为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://你的域名/api/1/upload</span><br></pre></td></tr></table></figure>

<p>key在chevereto里仪表盘-设置-api里能查看到</p>
<p>设置chevereto为默认图床</p>
<p>最后设置chevereto上传大小（设置-图片上传）：</p>
<p><img src="http://pic.cutexin.cn/images/2021/12/30/202112301136836.png" alt="image-20211230113658781"></p>
<p>最后可以安装一个压缩图片的工具utools方便使用</p>
<p>搞定！</p>
]]></content>
      <tags>
        <tag>教程</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>论文</title>
    <url>/2021/12/06/%E8%AE%BA%E6%96%87/</url>
    <content><![CDATA[<h3 id="a-fast-and-accurate-one-stage-approach-to-visual-grounding"><a href="#a-fast-and-accurate-one-stage-approach-to-visual-grounding" class="headerlink" title="a fast and accurate one-stage approach to visual grounding"></a><center>a fast and accurate one-stage approach to visual grounding</center></h3><p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4a7qtd3dj34kg220kjm.jpg"></p>
<span id="more"></span>

<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4a8wxvrij34kg220hdu.jpg"></p>
<p><img src="https://tva1.sinaimg.cn/mw690/0081YlEMly1gx4aa0u0ysj34kg220kjm.jpg"></p>
<h3 id="头脑风暴："><a href="#头脑风暴：" class="headerlink" title="头脑风暴："></a>头脑风暴：</h3><p>1、加入色彩模块，是否可以增加识别的准确度？</p>
<p>2、含糊不清楚的识别，是否可以通过设置阈值将多目标一起框选？</p>
<p><a href="grounding.pptx">点击下载</a> 汇报ppt</p>
]]></content>
      <tags>
        <tag>论文学习</tag>
      </tags>
  </entry>
</search>
